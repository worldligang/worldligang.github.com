<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 源代码 | 刚刚在线]]></title>
  <link href="http://www.superqq.com/blog/categories/yuan-dai-ma/atom.xml" rel="self"/>
  <link href="http://www.superqq.com/"/>
  <updated>2015-06-12T20:24:32+08:00</updated>
  <id>http://www.superqq.com/</id>
  <author>
    <name><![CDATA[李刚]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SDWebImage加载图片缓存图片]]></title>
    <link href="http://www.superqq.com/blog/2015/06/09/sdwebimagejia-zai-tu-pian-huan-cun-tu-pian/"/>
    <updated>2015-06-09T17:47:31+08:00</updated>
    <id>http://www.superqq.com/blog/2015/06/09/sdwebimagejia-zai-tu-pian-huan-cun-tu-pian</id>
    <content type="html"><![CDATA[<ul>
<li>关注公众号iOS开发：<strong>iOSDevTip</strong> 获取更多源代码。</li>
</ul>


<p> <a href="https://github.com/rs/SDWebImage.git"target="_blank"title="源代码">源代码</a></p>

<h1> Web Image</h1>

<p><a href="https://travis-ci.org/rs/SDWebImage"><img src="http://img.shields.io/travis/rs/SDWebImage/master.svg?style=flat" alt="Build Status" /></a>
<a href="http://cocoadocs.org/docsets/SDWebImage/"><img src="http://img.shields.io/cocoapods/v/SDWebImage.svg?style=flat" alt="Pod Version" /></a>
<a href="http://cocoadocs.org/docsets/SDWebImage/"><img src="http://img.shields.io/cocoapods/p/SDWebImage.svg?style=flat" alt="Pod Platform" /></a>
<a href="https://www.apache.org/licenses/LICENSE-2.0.html"><img src="http://img.shields.io/cocoapods/l/SDWebImage.svg?style=flat" alt="Pod License" /></a>
<a href="https://www.versioneye.com/objective-c/sdwebimage/3.3"><img src="https://www.versioneye.com/objective-c/sdwebimage/3.3/badge.svg?style=flat" alt="Dependency Status" /></a>
<a href="https://www.versioneye.com/objective-c/sdwebimage/references"><img src="https://www.versioneye.com/objective-c/sdwebimage/reference_badge.svg?style=flat" alt="Reference Status" /></a>
<a href="https://github.com/rs/SDWebImage"><img src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" alt="Carthage compatible" /></a></p>

<p>This library provides a category for UIImageView with support for remote images coming from the web.</p>

<p>It provides:</p>

<ul>
<li>An UIImageView category adding web image and cache management to the Cocoa Touch framework</li>
<li>An asynchronous image downloader</li>
<li>An asynchronous memory + disk image caching with automatic cache expiration handling</li>
<li>Animated GIF support</li>
<li>WebP format support</li>
<li>A background image decompression</li>
<li>A guarantee that the same URL won&rsquo;t be downloaded several times</li>
<li>A guarantee that bogus URLs won&rsquo;t be retried again and again</li>
<li>A guarantee that main thread will never be blocked</li>
<li>Performances!</li>
<li>Use GCD and ARC</li>
<li>Arm64 support</li>
</ul>


<p>NOTE: The version 3.0 of SDWebImage isn&rsquo;t fully backward compatible with 2.0 and requires iOS 5.1.1
minimum deployement version. If you need iOS &lt; 5.0 support, please use the last <a href="https://github.com/rs/SDWebImage/tree/2.0-compat">2.0 version</a>.</p>

<p><a href="https://github.com/rs/SDWebImage/wiki/How-is-SDWebImage-better-than-X%3F">How is SDWebImage better than X?</a></p>

<h2>Who Use It</h2>

<p>Find out <a href="https://github.com/rs/SDWebImage/wiki/Who-Uses-SDWebImage">who uses SDWebImage</a> and add your app to the list.</p>

<h2>How To Use</h2>

<p>API documentation is available at <a href="http://cocoadocs.org/docsets/SDWebImage/">CocoaDocs - SDWebImage</a></p>

<h3>Using UIImageView+WebCache category with UITableView</h3>

<p>Just #import the UIImageView+WebCache.h header, and call the sd_setImageWithURL:placeholderImage:
method from the tableView:cellForRowAtIndexPath: UITableViewDataSource method. Everything will be
handled for you, from async downloads to caching management.</p>

<pre><code class="objective-c">#import &lt;SDWebImage/UIImageView+WebCache.h&gt;

...

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *MyIdentifier = @"MyIdentifier";

    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:MyIdentifier];

    if (cell == nil)
    {
        cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault
                                       reuseIdentifier:MyIdentifier] autorelease];
    }

    // Here we use the new provided sd_setImageWithURL: method to load the web image
    [cell.imageView sd_setImageWithURL:[NSURL URLWithString:@"http://www.domain.com/path/to/image.jpg"]
                      placeholderImage:[UIImage imageNamed:@"placeholder.png"]];

    cell.textLabel.text = @"My Text";
    return cell;
}
</code></pre>

<h3>Using blocks</h3>

<p>With blocks, you can be notified about the image download progress and whenever the image retrival
has completed with success or not:</p>

<pre><code class="objective-c">// Here we use the new provided sd_setImageWithURL: method to load the web image
[cell.imageView sd_setImageWithURL:[NSURL URLWithString:@"http://www.domain.com/path/to/image.jpg"]
                      placeholderImage:[UIImage imageNamed:@"placeholder.png"]
                             completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) {... completion code here ...}];
</code></pre>

<p>Note: neither your success nor failure block will be call if your image request is canceled before completion.</p>

<h3>Using SDWebImageManager</h3>

<p>The SDWebImageManager is the class behind the UIImageView+WebCache category. It ties the
asynchronous downloader with the image cache store. You can use this class directly to benefit
from web image downloading with caching in another context than a UIView (ie: with Cocoa).</p>

<p>Here is a simple example of how to use SDWebImageManager:</p>

<pre><code class="objective-c">SDWebImageManager *manager = [SDWebImageManager sharedManager];
[manager downloadImageWithURL:imageURL
                      options:0
                     progress:^(NSInteger receivedSize, NSInteger expectedSize) {
                         // progression tracking code
                     }
                     completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, BOOL finished, NSURL *imageURL) {
                         if (image) {
                             // do something with image
                         }
                     }];
</code></pre>

<h3>Using Asynchronous Image Downloader Independently</h3>

<p>It&rsquo;s also possible to use the async image downloader independently:</p>

<pre><code class="objective-c">[SDWebImageDownloader.sharedDownloader downloadImageWithURL:imageURL
                                                    options:0
                                                   progress:^(NSInteger receivedSize, NSInteger expectedSize)
                                                   {
                                                       // progression tracking code
                                                   }
                                                   completed:^(UIImage *image, NSData *data, NSError *error, BOOL finished)
                                                   {
                                                       if (image &amp;&amp; finished)
                                                       {
                                                           // do something with image
                                                       }
                                                   }];
</code></pre>

<h3>Using Asynchronous Image Caching Independently</h3>

<p>It is also possible to use the async based image cache store independently. SDImageCache
maintains a memory cache and an optional disk cache. Disk cache write operations are performed
asynchronous so it doesn&rsquo;t add unnecessary latency to the UI.</p>

<p>The SDImageCache class provides a singleton instance for convenience but you can create your own
instance if you want to create separated cache namespace.</p>

<p>To lookup the cache, you use the <code>queryDiskCacheForKey:done:</code> method. If the method returns nil, it means the cache
doesn&rsquo;t currently own the image. You are thus responsible for generating and caching it. The cache
key is an application unique identifier for the image to cache. It is generally the absolute URL of
the image.</p>

<pre><code class="objective-c">SDImageCache *imageCache = [[SDImageCache alloc] initWithNamespace:@"myNamespace"];
[imageCache queryDiskCacheForKey:myCacheKey done:^(UIImage *image)
{
    // image is not nil if image was found
}];
</code></pre>

<p>By default SDImageCache will lookup the disk cache if an image can&rsquo;t be found in the memory cache.
You can prevent this from happening by calling the alternative method <code>imageFromMemoryCacheForKey:</code>.</p>

<p>To store an image into the cache, you use the storeImage:forKey: method:</p>

<pre><code class="objective-c">[[SDImageCache sharedImageCache] storeImage:myImage forKey:myCacheKey];
</code></pre>

<p>By default, the image will be stored in memory cache as well as on disk cache (asynchronously). If
you want only the memory cache, use the alternative method storeImage:forKey:toDisk: with a negative
third argument.</p>

<h3>Using cache key filter</h3>

<p>Sometime, you may not want to use the image URL as cache key because part of the URL is dynamic
(i.e.: for access control purpose). SDWebImageManager provides a way to set a cache key filter that
takes the NSURL as input, and output a cache key NSString.</p>

<p>The following example sets a filter in the application delegate that will remove any query-string from
the URL before to use it as a cache key:</p>

<pre><code class="objective-c">- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
{
    SDWebImageManager.sharedManager.cacheKeyFilter = ^(NSURL *url) {
        url = [[NSURL alloc] initWithScheme:url.scheme host:url.host path:url.path];
        return [url absoluteString];
    };

    // Your app init code...
    return YES;
}
</code></pre>

<h2>Common Problems</h2>

<h3>Using dynamic image size with UITableViewCell</h3>

<p>UITableView determines the size of the image by the first image set for a cell. If your remote images
don&rsquo;t have the same size as your placeholder image, you may experience strange anamorphic scaling issue.
The following article gives a way to workaround this issue:</p>

<p><a href="http://www.wrichards.com/blog/2011/11/sdwebimage-fixed-width-cell-images/">http://www.wrichards.com/blog/2011/11/sdwebimage-fixed-width-cell-images/</a></p>

<h3>Handle image refresh</h3>

<p>SDWebImage does very aggressive caching by default. It ignores all kind of caching control header returned by the HTTP server and cache the returned images with no time restriction. It implies your images URLs are static URLs pointing to images that never change. If the pointed image happen to change, some parts of the URL should change accordingly.</p>

<p>If you don&rsquo;t control the image server you&rsquo;re using, you may not be able to change the URL when its content is updated. This is the case for Facebook avatar URLs for instance. In such case, you may use the <code>SDWebImageRefreshCached</code> flag. This will slightly degrade the performance but will respect the HTTP caching control headers:</p>

<pre><code class="objective-c">[imageView sd_setImageWithURL:[NSURL URLWithString:@"https://graph.facebook.com/olivier.poitrey/picture"]
                 placeholderImage:[UIImage imageNamed:@"avatar-placeholder.png"]
                          options:SDWebImageRefreshCached];
</code></pre>

<h3>Add a progress indicator</h3>

<p>See this category: <a href="https://github.com/JJSaccolo/UIActivityIndicator-for-SDWebImage">https://github.com/JJSaccolo/UIActivityIndicator-for-SDWebImage</a></p>

<h2>Installation</h2>

<p>There are three ways to use SDWebImage in your project:
- using Cocoapods
- copying all the files into your project
- importing the project as a static library</p>

<h3>Installation with CocoaPods</h3>

<p><a href="http://cocoapods.org/">CocoaPods</a> is a dependency manager for Objective-C, which automates and simplifies the process of using 3rd-party libraries in your projects. See the <a href="http://cocoapods.org/#get_started">Get Started</a> section for more details.</p>

<h4>Podfile</h4>

<pre><code>platform :ios, '6.1'
pod 'SDWebImage', '~&gt;3.7'
</code></pre>

<h3>Installation with Carthage (iOS 8+)</h3>

<p><a href="https://github.com/Carthage/Carthage">Carthage</a> is a lightweight dependency manager for Swift and Objective-C. It leverages CocoaTouch modules and ins less invasive than CocoaPods.</p>

<p>To install with carthage, follow the instruction on <a href="https://github.com/Carthage/Carthage">Carthage</a></p>

<h4>Cartfile</h4>

<pre><code>github "rs/SDWebImage"
</code></pre>

<h4>Usage</h4>

<p>Swift</p>

<pre><code>import WebImage
</code></pre>

<p>Objective-C</p>

<pre><code>@import WebImage;
</code></pre>

<h3>Installation by cloning the repository</h3>

<p>In order to gain access to all the files from the repository, you should clone it.
<code>
git clone --recursive https://github.com/rs/SDWebImage.git
</code></p>

<h3>Add the SDWebImage project to your project</h3>

<ul>
<li>Download and unzip the last version of the framework from the <a href="https://github.com/rs/SDWebImage/releases">download page</a></li>
<li>Right-click on the project navigator and select &ldquo;Add Files to &#8220;Your Project&rdquo;:</li>
<li>In the dialog, select SDWebImage.framework:</li>
<li>Check the &ldquo;Copy items into destination group&rsquo;s folder (if needed)&rdquo; checkbox</li>
</ul>


<h3>Add dependencies</h3>

<ul>
<li>In you application project app’s target settings, find the &ldquo;Build Phases&rdquo; section and open the &ldquo;Link Binary With Libraries&rdquo; block:</li>
<li>Click the &ldquo;+&rdquo; button again and select the &ldquo;ImageIO.framework&rdquo;, this is needed by the progressive download feature:</li>
</ul>


<h3>Add Linker Flag</h3>

<p>Open the &ldquo;Build Settings&rdquo; tab, in the &ldquo;Linking&rdquo; section, locate the &ldquo;Other Linker Flags&rdquo; setting and add the &ldquo;-ObjC&rdquo; flag:</p>

<p><img src="http://dl.dropbox.com/u/123346/SDWebImage/10_other_linker_flags.jpg" alt="Other Linker Flags" /></p>

<p>Alternatively, if this causes compilation problems with frameworks that extend optional libraries, such as Parse,  RestKit or opencv2, instead of the -ObjC flag use:
<code>
-force_load SDWebImage.framework/Versions/Current/SDWebImage
</code></p>

<p>If you&rsquo;re using Cocoa Pods and have any frameworks that extend optional libraries, such as Parsen RestKit or opencv2, instead of the -ObjC flag use:
<code>
-force_load $(TARGET_BUILD_DIR)/libPods.a
</code></p>

<h3>Import headers in your source files</h3>

<p>In the source files where you need to use the library, import the header file:</p>

<pre><code class="objective-c">#import &lt;SDWebImage/UIImageView+WebCache.h&gt;
</code></pre>

<h3>Build Project</h3>

<p>At this point your workspace should build without error. If you are having problem, post to the Issue and the
community can help you solve it.</p>

<h2>Future Enhancements</h2>

<ul>
<li>LRU memory cache cleanup instead of reset on memory warning</li>
</ul>


<h2>Licenses</h2>

<p>All source code is licensed under the <a href="https://raw.github.com/rs/SDWebImage/master/LICENSE">MIT License</a>.</p>

<p><strong>更多源代码：</strong></p>

<p><a href="http://www.superqq.com/blog/2015/01/15/objective-cxiang-guan-categoryde-shou-ji/">Objective-C相关Category的收集</a></p>

<p><a href="http://www.superqq.com/blog/2015/01/07/paperfold-for-ios/">PaperFold-for-iOS</a></p>

<p><a href="http://www.superqq.com/blog/2015/01/07/dkcirclebutton/">DKCircleButton</a></p>

<p><a href="http://www.superqq.com/blog/2015/01/07/twittercover/">TwitterCover</a></p>

<p><a href="http://www.superqq.com/blog/2015/01/07/hackernews/">HackerNews</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Objective-C相关Category的收集]]></title>
    <link href="http://www.superqq.com/blog/2015/01/15/objective-cxiang-guan-categoryde-shou-ji/"/>
    <updated>2015-01-15T10:38:25+08:00</updated>
    <id>http://www.superqq.com/blog/2015/01/15/objective-cxiang-guan-categoryde-shou-ji</id>
    <content type="html"><![CDATA[<p>更多iOS开发相关技术请关注iOS开发微信公众号 iOS开发 ：</p>

<pre><code>iOSDevTip
</code></pre>

<p>Categories是给你得不到源码的classes增加功能的一种方法。 <a href="http://cocoacats.com"target="_blank"title="iOS开发">这个页面</a> 收集一些相关的Category，并且持续更新，你可以订阅关注。作者是Fille Åström，是@ IMGNRY的联合创始人和开发者。</p>

<p>感谢大家的反馈，如果你有任何想法、抱怨或者建议，可以给我发送邮件（fille@imgnry.com），也可以在<a href="twitter.com/bobmoff"target="_blank"title="iOS开发">推特</a>或者App.net上给我发信息（@bobmoff）。</p>

<p>参考阅读：
苹果官方文档：<a href="https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/CustomizingExistingClasses/CustomizingExistingClasses.html"target="_blank"title="iOS开发">Customizing Existing Classes </a></p>

<p><a href="https://github.com/Julioacarrettoni/UIImageView_FaceAwareFill"target="_blank"title="iOS开发">UIImageView+FaceAwareFill</a></p>

<p>这个类别使用了Aspect Fill内容模式，可以自动根据图像内容进行调整，当检测到人脸时，它会以脸部中心替代掉以图片的几何中心。
测试环境：Xcode 5.0，iOS 6.0以上</p>

<p><a href="https://github.com/bendytree/Objective-C-RegEx-Categories"target="_blank"title="iOS开发">NSRegularEx+ObjCRegex</a></p>

<p>Objective-C-RegEx-Categories是NSRegularExpression的一个延展，它可以把Object-C中的很多正则表达式合并成一个，简化了代码。
这个库没有任何依赖性，适用于iOS 4+和OS X 10.7+。</p>

<p><a href="https://github.com/nicklockwood/AutoCoding"target="_blank"title="iOS开发">NSObject+AutoCoding</a></p>

<p>AutoCoding是一个NSObject的类目，提供了对NSCoding 和NSCopying的自动支持。
兼容ARC和non-ARC编译目标
支持iOS 7.0/Mac OS 10.9 (Xcode 5.0, Apple LLVM compiler 5.0)</p>

<p><a href="https://gist.github.com/alvesjtiago/8123006"target="_blank"title="iOS开发">NSInvocation+SimpleCreation</a></p>

<p>创建invocations的简单方法</p>

<p><a href="https://github.com/shaahin/SHPersian"target="_blank"title="iOS开发">NSString+SHPersian</a></p>

<p>SHPersian是一个针对使用波斯语和阿拉伯语的iOS开发者提供的工具，包含了一个在Persian iOS app中为文本添加自定义外观的必需的类。</p>

<p><a href="https://gist.github.com/billyohgren/7944887"target="_blank"title="iOS开发">UILabel+ContentSize</a></p>

<p>在UILabel内计算内容的大小。</p>

<p><a href="https://github.com/RuiAAPeres/UIViewController-Swizzled"target="_blank"title="iOS开发">UIViewController+Swizzled</a></p>

<p>记录UIViewController层次：包括你在视图控制器的名字，还有你进入层次的展示。</p>

<p><a href="https://gist.github.com/maciekish/7772693"target="_blank"title="iOS开发">NSObject+Association</a></p>

<p>你是不是一直希望将&#8221;userInfo&#8221;显示到UIAlertView上呢？通过Association这个category可以将任意的对象赋值给其它任意对象(从iOS3.1和mac os 10.6到最新的系统版本。)</p>

<p><a href="https://gist.github.com/maciekish/6268142"target="_blank"title="iOS开发">NSHTTPCookieStorage+FreezeDry</a></p>

<p>app重启时，清除UIWebView cookies。</p>

<p><a href="https://github.com/erica/uidevice-extension"target="_blank"title="iOS开发">UIDevice+Hardware</a></p>

<p>检测硬件设备的版本。</p>

<p><a href="https://gist.github.com/aegzorz/6068741"target="_blank"title="iOS开发">NSObject+LogDealloc</a></p>

<p>是一个NSObject category，对于内存泄露的跟踪非常有用</p>

<p><a href="https://github.com/krzysztofzablocki/SFObservers"target="_blank"title="iOS开发">NSObject+SFObservers</a></p>

<p>是对NSNotificationCenter and KVO的一个扩展，它能够自动移除观察者。</p>

<p><a href="https://gist.github.com/maciekish/6052297"target="_blank"title="iOS开发">UIApplication+NetworkActivity</a></p>

<p>UIApplication+NetworkActivity跟踪你最近进行过的网络操作，并管理NetworkActivityIndicator。</p>

<p><a href="https://gist.github.com/aegzorz/5974444"target="_blank"title="iOS开发">UIView+Recursion</a></p>

<p>以递归的方式遍历(查找)subview</p>

<p><a href="https://gist.github.com/bobmoff/5967220"target="_blank"title="iOS开发">UIView+RoundedCorners</a></p>

<p>使用图层蒙版为视图添加圆角</p>

<p><a href="https://gist.github.com/bobmoff/5967180"target="_blank"title="iOS开发">UIView+Stacker</a></p>

<p>Stack subviews是按照索引进行垂直排序的。主要用于——使用xib时，以及需要进行view布局时(显示/隐藏)——当基于外部数据。不过不能用于autolayout。.</p>

<p><a href="https://github.com/carlbrown/RegexOnNSString"target="_blank"title="iOS开发">NSString+PDRegex</a></p>

<p>简化正则表达式的使用</p>

<p><a href="https://gist.github.com/maciekish/5947238"target="_blank"title="iOS开发">MKMapView+MoveLogo</a></p>

<p>这个类目允许你移动MKMapView logo，即使你放其他东西在mapview上它仍能保持可见。如果隐藏了logo，那将不能通过App Store审核。已经在iOS 5-iOS 7上进行了测试。</p>

<p><a href="https://github.com/azu/NSDate-Escort"target="_blank"title="iOS开发">NSDate+Escort</a></p>

<p>NSDate-Escort是一个NSDate实用库，兼容NSDate-Extensions API</p>

<p><a href="https://gist.github.com/danielphillips/1005520"target="_blank"title="iOS开发">UILabel+DynamicSizeMe</a></p>

<p>调整UILabel来根据内容改变其框架</p>

<p><a href="https://github.com/scalessec/Toast"target="_blank"title="iOS开发">UIView+Toast</a></p>

<p>适用于iOS上的Android风格toas通知。</p>

<p><a href="https://github.com/Nyx0uf/NYXImagesKit"target="_blank"title="iOS开发">UIImage+NYXImagesKit</a></p>

<p>NYXImagesKit是一个重组了多个有用的UIImage categories的iOS项目，可对图像/图片进行多个处理，比如筛选、模糊、优化、蒙版、调整大小、旋转以及保存等等。同时还提供了一个UIImageView子类从URL异步加载图片，并在下载完毕时展示图片。</p>

<p><a href="https://github.com/martinjuhasz/MJPopupViewController"target="_blank"title="iOS开发">UIViewController+MJPopup</a></p>

<p>MJPopupViewController是一个 UIViewController Category，用于使用不同的过渡效果来把ViewController作为弹出视图进行展示。</p>

<p>  <a href="https://github.com/mattgemmell/MGImageUtilities"target="_blank"title="iOS开发">UIImage+MGImageUtilities</a></p>

<p>MGImageUtilities展示两个UIImage category：UIImage+ProportionalFill和UIImage+Tint。你可以通过UIImage+ProportionalFill调整任意图片的尺寸，可以使用UIImage+Tint来为图片着色。</p>

<p><a href="https://github.com/Cocoanetics/DTFoundation"target="_blank"title="iOS开发">MultipleObjects+DTFoundation</a></p>

<p>DTFoundation集合了实用方法和category的扩展，逐渐演变成一个文档齐全的工具集，记录和测试代码以加快开发。</p>

<p><a href="https://github.com/rs/SDWebImage"target="_blank"title="iOS开发">UIImageView+WebCache</a></p>

<p>SDWebImage提供一个UIImageView类别，以支持加载管理源自网络的远程图片。具有异步加载、缓存管理、同一个URL下载次数控制和优化等特征。简单易用。</p>

<p> <a href="https://github.com/bennyguitar/Colours"target="_blank"title="iOS开发">UIColor+Colours</a></p>

<p>100组漂亮的预制的色彩和配色方案可以让你的iOS/OS X开发更轻松。</p>

<p> <a href="https://github.com/ProjectDent/UIImage-PDFColoredImage"target="_blank"title="iOS开发">UIImage+PDFColoredImage</a></p>

<p>UIImage-PDFColoredImage是一个UIImage扩展，可以把黑色的PDF image转换成任意尺寸任意颜色的UIImage，只需一行代码，简单易用。</p>

<p><a href="https://github.com/k06a/NSData-AsyncCacher"target="_blank"title="iOS开发">NSData+AsyncCacher</a></p>

<p>NSData-AsyncCacher是NSData的一个category，用于从url和block中异步加载数据。请求数据使用NSCache缓存，可以多次请求。</p>

<p> <a href="https://github.com/billymeltdown/nsdate-helper"target="_blank"title="iOS开发">NSDate+Helper</a></p>

<p>通过一些便捷函数扩展了Cocoa的NSDate</p>

<p> <a href="https://github.com/supermarin/ObjectiveSugar"target="_blank"title="iOS开发">MultipleObjects+ObjectiveSugar</a></p>

<p>Objective-C additions for humans. Ruby style.</p>

<p><a href="https://github.com/Kjuly/MKMapView-ZoomLevel"target="_blank"title="iOS开发">MKMapView+ZoomLevel</a></p>

<p>在MapView中设置缩放比例。</p>

<p> <a href="https://gist.github.com/Abeansits/5848341"target="_blank"title="iOS开发">NSString+Extensions</a></p>

<p>一个针对NSStrings的category，它能将string转换为SHA1，NSNumber。检测string是否为空、是否包含某个子字符串，以及替换掉NSDictionary中的子字符串。</p>

<p><a href="https://github.com/nicklockwood/ViewUtils"target="_blank"title="iOS开发">UIView+Utils</a></p>

<p>ViewUtils是一个category methods的集合，这些方法是UIView的扩展，包含了许多方便的属性和方法，其中许多都是我们希望苹果内置的。</p>

<p> <a href="https://github.com/kevinlawler/NSDate-TimeAgo"target="_blank"title="iOS开发">NSDate+TimeAgo</a></p>

<p>让NSDate报告时间，比如&#8221;A moment ago&#8221;, &ldquo;30 seconds ago&rdquo;, &ldquo;5 minutes ago&rdquo;, &ldquo;Yesterday&rdquo;, &ldquo;Last month&rdquo;, &ldquo;2 years ago&#8221;以及其他。</p>

<p> <a href="https://github.com/alexdrone/ios-fontawesome"target="_blank"title="iOS开发">NSString+FontAwesome</a></p>

<p>FontAwesome+iOS是一个开源形象字体库，通过扩展 NSString 让你在app中轻松使用 FontAwesome 字体。
官方网站：<a href="http://fortawesome.github.io/Font-Awesome/">http://fortawesome.github.io/Font-Awesome/</a></p>

<p> <a href="https://gist.github.com/aegzorz/5797393"target="_blank"title="iOS开发">NSArray+FirstObject</a></p>

<p>从数组中获得第一个对象，或者从空数组中返回零</p>

<p>  <a href="https://github.com/djmadcat/NSObject-AutoDescription"target="_blank"title="iOS开发">NSObject+AutoDescription</a></p>

<p>能够简单地为任何类描述日志(从 NSObject派生出来)</p>

<p>  <a href="https://gist.github.com/aegzorz/5797337"target="_blank"title="iOS开发">CGRect+Additions</a></p>

<p>处理CGRects的一些函数。</p>

<p> <a href="https://gist.github.com/bobmoff/5276954"target="_blank"title="iOS开发">UIView+ModifyFrame</a></p>

<p>简单实用的UIView类目使修改框架不那么变态。</p>

<p><a href="https://gist.github.com/dsibilly/1038500"target="_blank"title="iOS开发">NSString+UsefulShit</a></p>

<p>Objective-C category 示范</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PaperFold-for-iOS]]></title>
    <link href="http://www.superqq.com/blog/2015/01/07/paperfold-for-ios/"/>
    <updated>2015-01-07T14:55:39+08:00</updated>
    <id>http://www.superqq.com/blog/2015/01/07/paperfold-for-ios</id>
    <content type="html"><![CDATA[<p>更多iOS开发相关技术请关注iOS开发微信公众号 iOS开发 ：</p>

<pre><code>iOSDevTip
</code></pre>

<p> <a href="https://github.com/honcheng/PaperFold-for-iOS.git"target="_blank"title="源代码">源代码</a></p>

<h1>PaperFold for iOS</h1>

<p>PaperFold is a simple iOS control that allows hiding of views on the left and right side of the screen by dragging the middle view.
The left view supports only 1 fold. The right view supports variable number of folds.</p>

<p><img width=150 src="https://github.com/honcheng/PaperFold-for-iOS/raw/master/Screenshots/1.png"/> <img width=150 src="https://github.com/honcheng/PaperFold-for-iOS/raw/master/Screenshots/2.png"/> <img width=150 src="https://github.com/honcheng/PaperFold-for-iOS/raw/master/Screenshots/3.png"/> <img width=150 src="https://github.com/honcheng/PaperFold-for-iOS/raw/master/Screenshots/4.png"/></p>

<p><em>Vertical fold is still in active testing, in an experimental branch (top-multifold) at the moment.</em></p>

<p><img width=150 src="https://github.com/honcheng/PaperFold-for-iOS/raw/master/Screenshots/5-topfold.png"/> <img width=150 src="https://github.com/honcheng/PaperFold-for-iOS/raw/master/Screenshots/6-topfold.png"/> <img width=150 src="https://github.com/honcheng/PaperFold-for-iOS/raw/master/Screenshots/7-topfold.png"/> <img width=150 src="https://github.com/honcheng/PaperFold-for-iOS/raw/master/Screenshots/8-bottomfold.png"/> <img width=150 src="https://github.com/honcheng/PaperFold-for-iOS/raw/master/Screenshots/9-bottomfold.png"/><br/>
<img width=300 src="https://github.com/honcheng/PaperFold-for-iOS/raw/master/Screenshots/verticalfold.gif"/></p>

<h2>How it works</h2>

<p>During folding, a screen capture of the left/right view is taken, and split up depending on the number of folds required. The virtual light source is on the right side of the screen, so surfaces that faces the left are darker. For the right multi-fold view, the fold closes to the &lsquo;force&rsquo; are opened up faster than the folds that is further away.</p>

<p>A sample project is included.</p>

<h2>Example</h2>

<p>Refer to this <a href="http://www.honcheng.com/2012/02/Playing-with-folding-navigations">link</a> for a video showing the prototype of an app that I was working on. In the end, the proposed project was never completed because I could not obtained reliable data for the app, but I intend to use it for another app.</p>

<p><img width=300 src="https://github.com/honcheng/PaperFold-for-iOS/raw/master/Screenshots/leftfold.gif"/> <img width=300 src="https://github.com/honcheng/PaperFold-for-iOS/raw/master/Screenshots/rightfold.gif"/></p>

<p>The animation here looks a bit laggy, but that&rsquo;s because of the low frame rates in GIF.</p>

<h2>Usage</h2>

<p>1) Add PaperFoldView as a subview into your view controller.</p>

<pre><code>_paperFoldView = [[PaperFoldView alloc] initWithFrame:CGRectMake(0,0,100,[self.view bounds].size.height)];
[self.view addSubview:_paperFoldView];
</code></pre>

<p>2) To set left view, use setLeftFoldContentView:foldCount:pullFactor:. Example below uses a UITableView, but it can any UIView.</p>

<pre><code>_leftTableView = [[UITableView alloc] initWithFrame:CGRectMake(0,0,100,[self.view bounds].size.height)];
[_paperFoldView setLeftFoldContentView:_leftTableView foldCount:3 pullFactor:0.9];
</code></pre>

<p>3) To set the right view, use setRightFoldContentView:foldCount:pullFactor:. Example below uses a MKMapView, but it can any UIView. The fold count is the number of folds in the right view. The pull factor controls the ratio of folding/unfolding of the different folds away from the center.</p>

<pre><code>_mapView = [[MKMapView alloc] initWithFrame:CGRectMake(0,0,240,[self.view bounds].size.height)];
[_paperFoldView setRightFoldContentView:_mapView foldCount:3 pullFactor:0.9];
</code></pre>

<p>4) To set the center view</p>

<pre><code>_centerTableView = [[UITableView alloc] initWithFrame:CGRectMake(0,0,[self.view bounds].size.height,[self.view bounds].size.height)];
[_paperFoldView setCenterContentView:_centerTableView];
</code></pre>

<p>4) Sometimes you may want to disable drag-to-unfold if you have a table view in the center view and wish to preserve the swipe gesture functions e.g. to delete cells.</p>

<pre><code>// this disables dragging to unfold the left view
[self.paperFoldView setEnableLeftFoldDragging:NO];

// this disables dragging to unfold the right view
[self.paperFoldView setEnableRightFoldDragging:NO];
</code></pre>

<p>5) To unfold left view without dragging</p>

<pre><code>[self.paperFoldView setPaperFoldState:PaperFoldStateLeftUnfolded];
</code></pre>

<p>6) To unfold right view without dragging</p>

<pre><code>[self.paperFoldView setPaperFoldState:PaperFoldStateRightUnfolded];
</code></pre>

<p>7) To restore view to center without dragging</p>

<pre><code>[self.paperFoldView setPaperFoldState:PaperFoldStateDefault];
</code></pre>

<p>8) To receive callbacks when fold state changes, and if the fold was activated manually by finger gesture, or automatically by calling setPaperFoldState:</p>

<pre><code>// register callback delegate
[self.paperFoldView setDelegate:self];

// callback comes from the following delegate method 
- (void)paperFoldView:(id)paperFoldView didFoldAutomatically:(BOOL)automatic toState:(PaperFoldState)paperFoldState
</code></pre>

<h2>Requirements</h2>

<p>This project uses ARC. If you are not using ARC in your project, add &lsquo;-fobjc-arc&rsquo; as a compiler flag for all the files in this project.
XCode 4.4 is required for auto-synthesis.</p>

<h2>Apps that uses PaperFold</h2>

<p><a href="https://itunes.apple.com/sg/app/id547022322">Showy</a>
, <a href="https://itunes.apple.com/sg/app/largetype-full-screen-text/id568459406">LargeType</a>
, <a href="https://itunes.apple.com/us/app/nextride-singapore-public/id565103559">NextRide</a>
, <a href="https://itunes.apple.com/sg/app/sg-nextbus/id361404839">SG NextBus</a>
, <a href="https://itunes.apple.com/cn/app/hang-zhou-de-tie/id518531257?mt=8">Hangzhou Metro</a></p>

<p><a href="http://twitter.com/honcheng">Contact me</a> if you want your app listed here. Thanks</p>

<h2>Other Projects that uses PaperFold</h2>

<p><a href="https://github.com/honcheng/PaperFoldMenuController">PaperFoldMenuController</a> by me.</p>

<p><a href="https://github.com/yestoall/PaperFold-pod-DEMO">PaperFold CocoaPod Demo for RubyMotion</a> by <a href="yestoall">yestoall</a>.</p>

<p><a href="https://github.com/atsusy/TiPaperFold">Titanium Mobile Mobule for PaperFold</a> by <a href="https://github.com/atsusy/">atsusy</a>.</p>

<h2>Known Problem</h2>

<p>Screen capture of MKMapView is iOS6 is not taken properly. I approached a few Apple engineers at WWDC, and was told that it is most likely a bug that need to fix. I have already filed a bug report (filed as rdar://11813051, closed by Apple because it is a duplicate of rdar://11650331). Hopefully it will be fixed soon.</p>

<p><strong>Update:</strong> This bug is fixed in iOS6b4. No problem taking screenshot of MKMapView.</p>

<h2>Credits</h2>

<p>Special thanks to <a href="http://twitter.com/dilliontan">@dilliontan</a>, my colleague in <a href="http://buuuk.com">buUuk</a> for explaining CAAffineTransform. He&rsquo;s a master at that :p. I&rsquo;m still a noob.
You can check out his <a href="https://github.com/Dillion/iOS-Flip-Transform">iOS-Flip-Transform project here</a>.</p>

<h2>Contact</h2>

<p><a href="http://twitter.com/honcheng">twitter.com/honcheng</a>
<a href="http://honcheng.com">honcheng.com</a></p>

<p><img src="http://www.cocoacontrols.com/analytics/honcheng/paperfold-for-ios.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DKCircleButton]]></title>
    <link href="http://www.superqq.com/blog/2015/01/07/dkcirclebutton/"/>
    <updated>2015-01-07T14:48:23+08:00</updated>
    <id>http://www.superqq.com/blog/2015/01/07/dkcirclebutton</id>
    <content type="html"><![CDATA[<p>更多iOS开发相关技术请关注iOS开发微信公众号 iOS开发 ：</p>

<pre><code>iOSDevTip
</code></pre>

<p> <a href="https://github.com/kronik/DKCircleButton.git"target="_blank"title="源代码">源代码</a></p>

<h1> DKCircleButton</h1>

<p>Sources of DKCircleButton and Demo app to show circle button tap effect.</p>

<h2>Download</h2>

<pre><code>$ git clone https://github.com/kronik/DKCircleButton.git
$ cd DKCircleButton/
</code></pre>

<h2>Usage</h2>

<p>Please check out the demo project included.</p>

<h1><img src="https://raw.github.com/kronik/DKCircleButton/master/example.gif" alt="Screenshot" /></h1>

<h3>Initialization</h3>

<p>Like a regular custom UIButton
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="nb">super</span> <span class="n">viewDidLoad</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="n">DKCircleButton</span> <span class="o">*</span><span class="n">button1</span> <span class="o">=</span> <span class="p">[[</span><span class="n">DKCircleButton</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame</span><span class="p">:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">90</span><span class="p">,</span> <span class="mi">90</span><span class="p">)];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="n">button1</span><span class="p">.</span><span class="n">center</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="mi">160</span><span class="p">,</span> <span class="mi">200</span><span class="p">);</span>
</span><span class='line'>  <span class="n">button1</span><span class="p">.</span><span class="n">titleLabel</span><span class="p">.</span><span class="n">font</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIFont</span> <span class="nl">systemFontOfSize</span><span class="p">:</span><span class="mi">22</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3>Toggle animation mode</h3>

<pre><code class="objective-c">  button1.animateTap = NO;
</code></pre>

<h2>Requirements</h2>

<p>Supported build target - iOS 7.x
Earliest supported deployment target - iOS 7.0</p>

<h2>License</h2>

<p>DKCircleButton is available under the MIT license. See the LICENSE file for more info.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TwitterCover]]></title>
    <link href="http://www.superqq.com/blog/2015/01/07/twittercover/"/>
    <updated>2015-01-07T13:20:17+08:00</updated>
    <id>http://www.superqq.com/blog/2015/01/07/twittercover</id>
    <content type="html"><![CDATA[<p>更多iOS开发相关技术请关注iOS开发微信公众号 iOS开发 ：</p>

<pre><code>iOSDevTip
</code></pre>

<p> <a href="https://github.com/cyndibaby905/TwitterCover.git"target="_blank"title="源代码">源代码</a></p>

<p> ## TwitterCover ##</p>

<p>TwitterCover is a parallax top view with real time blur effect to any UIScrollView, inspired by Twitter for iOS.</p>

<p>Completely created using UIKit framework.</p>

<p>Easy to drop into your project.</p>

<p>You can add this feature to your own project, <code>TwitterCover</code> is easy-to-use.</p>

<h2>Requirements</h2>

<p>TwitterCover requires Xcode 5, targeting either iOS 5.0 and above, ARC-enabled.</p>

<h2>How to use</h2>

<p>Drag UIScrollView+TwitterCover.h amd UIScrollView+TwitterCover.m files to your project.</p>

<p>No other frameworks required.</p>

<pre><code>#import "UIScrollView+TwitterCover.h"

UIScrollView *scrollView = [[UIScrollView alloc] initWithFrame:self.view.bounds];
[scrollView addTwitterCoverWithImage:[UIImage imageNamed:@"cover.png"]];
</code></pre>

<p>And do not forget to remove it in your dealloc method, otherwise memory leaks:</p>

<pre><code>[scrollView removeTwitterCoverView];    
</code></pre>

<h2>How it looks</h2>

<p><img src="https://raw.github.com/cyndibaby905/TwitterCover/master/TwitterCover.gif" /></a></p>

<h2>Lincense</h2>

<p><code>TwitterCover</code> is available under the MIT license. See the LICENSE file for more info.</p>
]]></content>
  </entry>
  
</feed>
