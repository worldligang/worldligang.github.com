<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 使用uidatadetectortypes自动检测电话、网址和邮箱。我们先来看看uidatadetectortypes有哪些枚举值。 | 刚刚在线]]></title>
  <link href="http://www.superqq.com/blog/categories/shi-yong-uidatadetectortypeszi-dong-jian-ce-dian-hua-,-wang-zhi-he-you-xiang-.-wo-men-xian-lai-kan-kan-uidatadetectortypesyou-na-xie-mei-ju-zhi-./atom.xml" rel="self"/>
  <link href="http://www.superqq.com/"/>
  <updated>2015-07-10T00:36:06+08:00</updated>
  <id>http://www.superqq.com/</id>
  <author>
    <name><![CDATA[李刚]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用UIDataDetectorTypes自动检测电话、网址和邮箱]]></title>
    <link href="http://www.superqq.com/blog/2015/07/09/shi-yong-uidatadetectortypeszi-dong-jian-ce-dian-hua-,-wang-zhi-he-you-xiang/"/>
    <updated>2015-07-09T23:43:39+08:00</updated>
    <id>http://www.superqq.com/blog/2015/07/09/shi-yong-uidatadetectortypeszi-dong-jian-ce-dian-hua-,-wang-zhi-he-you-xiang</id>
    <content type="html"><![CDATA[<p>支付宝发布最新版本9.0，再一次引发一场撕逼大战。微信说支付宝抄袭了它，支付宝说微信一直都在抄袭自己。在我看来，微信和支付宝都抄袭了对方。对于大佬们的抄袭，我们也是司空见惯了。</p>

<p>支付宝这一次更新，真是赚足了眼球，估计这也是支付宝的推广策略。就是要造势，造势有利于品牌推广。传播速度可想而知，似乎一夜之间都在谈论支付宝和微信。</p>

<p>至于支付宝和微信谁能打过谁，我们拭目以待。</p>

<p>上一篇文章<a href="http://www.superqq.com/blog/2015/07/08/uiwebviewyong-fa-xiang-jie/">UIWebView用法详解及代码分享</a>里面提到：</p>

<pre><code>webView.dataDetectorTypes = UIDataDetectorTypePhoneNumber;//自动检测网页上的电话号码，单击可以拨打
</code></pre>

<p>接下来我们来简单讲一下，使用UIDataDetectorTypes自动检测电话、网址和邮箱。我们先来看看UIDataDetectorTypes有哪些枚举值。</p>

<h2>UIDataDetectorTypes的枚举值</h2>

<pre><code>typedef NS_OPTIONS(NSUInteger, UIDataDetectorTypes) {
    UIDataDetectorTypePhoneNumber   = 1 &lt;&lt; 0,          // Phone number detection
    UIDataDetectorTypeLink          = 1 &lt;&lt; 1,          // URL detection    
#if __IPHONE_4_0 &lt;= __IPHONE_OS_VERSION_MAX_ALLOWED
    UIDataDetectorTypeAddress       = 1 &lt;&lt; 2,          // Street address detection
    UIDataDetectorTypeCalendarEvent = 1 &lt;&lt; 3,          // Event detection
#endif    

    UIDataDetectorTypeNone          = 0,               // No detection at all
    UIDataDetectorTypeAll           = NSUIntegerMax    // All types
};
</code></pre>

<p>NS_OPTIONS一般用来定义位移相关操作的枚举值。UIDataDetectorTypeAddress，UIDataDetectorTypeCalendarEvent不在我们考虑的范围了。</p>

<p>UIWebView有dataDetectorTypes属性，UITextView也有dataDetectorTypes属性。我们来UITextView来举例。</p>

<h2>创建UITextView</h2>

<pre><code>UITextView *textView = [[UITextView alloc] initWithFrame:self.view.bounds];
textView.font = [UIFont systemFontOfSize:20];
textView.editable = NO;
textView.text = @"\r\n我的手机号不是： 13888888888 \r\n\r\n"
"我的博客刚刚在线网址： www.xxxxxx.com \r\n\r\n"
"我的邮箱： worldligang@163.com \r\n\r\n";
[self.view addSubview:textView];
</code></pre>

<p>运行起来看一下：</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/UIDataDetectorTypes1.jpeg" alt="UIDataDetectorTypes1" /></p>

<p>可以看出来就是一个简单的文本，电话号码，网址和邮箱都没有检测出来。下面我们来看看dataDetectorTypes作用。</p>

<h2>UIDataDetectorTypePhoneNumber检测电话</h2>

<pre><code>textView.dataDetectorTypes = UIDataDetectorTypePhoneNumber;
</code></pre>

<p>设置textView.dataDetectorTypes的属性，即可检测文本中的电话。效果如下所示：</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/UIDataDetectorTypes2.jpeg" alt="UIDataDetectorTypes2" /></p>

<h2>UIDataDetectorTypeLink检测网址和邮箱</h2>

<pre><code>textView.dataDetectorTypes = UIDataDetectorTypeLink;
</code></pre>

<p>UIDataDetectorTypeLink检测网址和邮箱的。点击网址会跳转到相应的网页，点击邮箱可以调用系统的发邮件。</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/UIDataDetectorTypes3.jpeg" alt="UIDataDetectorTypes3" /></p>

<h2>UIDataDetectorTypeAll检测电话、网址和邮箱</h2>

<pre><code>textView.dataDetectorTypes = UIDataDetectorTypeAll;
</code></pre>

<p>UIDataDetectorTypeAll可以检测检测电话、网址和邮箱。效果如下：</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/UIDataDetectorTypes4.jpeg" alt="UIDataDetectorTypes4" /></p>

<p>专门写了一个iOSStrongDemo以后都在这个iOSStrongDemo里面更新内容。下载地址：<a href="https://github.com/worldligang/iOSStrongDemo">iOSStrongDemo</a></p>
]]></content>
  </entry>
  
</feed>
