<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ios开发 | 刚刚在线]]></title>
  <link href="http://www.superqq.com/blog/categories/ioskai-fa/atom.xml" rel="self"/>
  <link href="http://www.superqq.com/"/>
  <updated>2015-07-05T12:54:49+08:00</updated>
  <id>http://www.superqq.com/</id>
  <author>
    <name><![CDATA[李刚]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[UIButton中的三个UIEdgeInsets属性（二）]]></title>
    <link href="http://www.superqq.com/blog/2015/07/04/uibuttonzhong-de-san-ge-uiedgeinsetsshu-xing-(er-)/"/>
    <updated>2015-07-04T14:14:43+08:00</updated>
    <id>http://www.superqq.com/blog/2015/07/04/uibuttonzhong-de-san-ge-uiedgeinsetsshu-xing-(er-)</id>
    <content type="html"><![CDATA[<p>昨天去公司加班的人请举手，不是只有我一个吧？（😭）我觉得加班的人应该不少吧。今天周日，应该不需要去加班了。心里暗暗自喜，终于可以休息一天啦。（😄）</p>

<p>说到加班，应该是程序猿心里的痛啊。不加班吧，东西做不完；加班吧，身体吃不消。作为程序猿真的不容易，每天从早忙到晚。突然有一天，六点下班，看见太阳还在等我，心里被踢有多高兴。</p>

<p>弱弱的问一下：加班好不好？</p>

<p>要看这个问题问谁了。如果问老板，老板肯定美滋滋的说，加班好啊，说明你有责任心，有上进心，把公司当成自己的&hellip;</p>

<p>如果问我，哈哈，我当然说加班不好啦，不然会被打死的。开个玩笑。说句实话，加班肯定是不好的，尤其是对程序猿来说。每天面对电脑，每天坐着，时间长了，各种问题就凸显出来。</p>

<p>但是，我说加班不好有用吗？如果我要是老板，我就直接让员工在家办公。（😊）所以大家感觉支持我吧，说不定哪天我真的&hellip;</p>

<p>接着昨天的<a href="http://www.superqq.com/blog/2015/07/03/uibuttonzhong-de-san-ge-uiedgeinsetsshu-xing-%28%5B%3F%5D-%29/">UIButton中的三个UIEdgeInsets属性</a>，今天我们具体谈谈UIButton的contentEdgeInsets、titleEdgeInsets、imageEdgeInsets属性。</p>

<h2>创建UIButton</h2>

<pre><code>UIButton *button = [[UIButton alloc] init];
button.frame = CGRectMake(50, 200, 200, 50);
[button setTitle:@"我是UIButton" forState:UIControlStateNormal];
[button setTitleColor:[UIColor blueColor] forState:UIControlStateNormal];
[button setBackgroundColor:[UIColor orangeColor]];
button.titleLabel.textAlignment = NSTextAlignmentLeft;
button.contentHorizontalAlignment = UIControlContentHorizontalAlignmentLeft;
[self.view addSubview:button];
</code></pre>

<p>创建一个button，让button的title居左，以便观察：</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/button1.png" alt="1" /></p>

<h2>UIButton的contentEdgeInsets属性</h2>

<pre><code>@property(nonatomic)          UIEdgeInsets contentEdgeInsets UI_APPEARANCE_SELECTOR; // default is UIEdgeInsetsZero
</code></pre>

<p>contentEdgeInsets里有一个content应该指的就是UIButton的title。</p>

<h3>参数含义</h3>

<p>上一篇文章我们讲了UIEdgeInsets是个结构体类型。里面有四个参数，分别是：top, left, bottom, right。这四个参数表示距离上边界、左边界、下边界、右边界的距离。</p>

<p>这四个参数的值可以为正值，也可以为负值。拿left举例：</p>

<pre><code>left = 10; //代表以当前位置为基准，向右移动10个像素
left = -10; //代表以当前位置为基准，向左移动10个像素
</code></pre>

<h3>向右移动20个像素</h3>

<pre><code>button.contentEdgeInsets = UIEdgeInsetsMake(0, 20, 0, 0);
</code></pre>

<p>向右移动20个像素，left = 20，就可以了。</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/button2.png" alt="2" /></p>

<h3>向左移动20个像素</h3>

<pre><code>button.contentEdgeInsets = UIEdgeInsetsMake(0, -20, 0, 0);
</code></pre>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/button3.png" alt="2" /></p>

<h2>UIButton的titleEdgeInsets属性</h2>

<p>titleEdgeInsets和contentEdgeInsets的作用差不多。我们及设置contentEdgeInsets，又设置titleEdgeInsets，会怎样呢？</p>

<pre><code>button.titleEdgeInsets = UIEdgeInsetsMake(0, 20, 0, 0);
button.contentEdgeInsets = UIEdgeInsetsMake(0, 20 , 0, 0);
</code></pre>

<p>看一下效果：</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/button4.png" alt="3" /></p>

<h2>UIButton的titleEdgeInsets属性</h2>

<h3>创建一个带照片的button</h3>

<pre><code>UIButton *button = [[UIButton alloc] init];
button.frame = CGRectMake(50, 200, 200, 200);
[button setTitleColor:[UIColor blueColor] forState:UIControlStateNormal];
[button setBackgroundColor:[UIColor orangeColor]];
[button setImage:[UIImage imageNamed:@"test"] forState:UIControlStateNormal];
[self.view addSubview:button];
</code></pre>

<p>运行一下：</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/button5.png" alt="5" /></p>

<h3>向右移动50个像素</h3>

<pre><code>button.imageEdgeInsets = UIEdgeInsetsMake(0, 50, 0, 0);
</code></pre>

<p>看看效果：</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/button6.png" alt="6" /></p>

<h3>向左移动50个像素</h3>

<pre><code>button.imageEdgeInsets = UIEdgeInsetsMake(0, -50, 0, 0);
</code></pre>

<p>看看效果：</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/button7.png" alt="7" /></p>

<p>大家可以自行设置其他三个参数看看效果是怎样的，自己动手便于理解。</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/ios.png" alt="ios" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UIButton中的三个UIEdgeInsets属性（一）]]></title>
    <link href="http://www.superqq.com/blog/2015/07/03/uibuttonzhong-de-san-ge-uiedgeinsetsshu-xing-(%5B%3F%5D-)/"/>
    <updated>2015-07-03T23:29:55+08:00</updated>
    <id>http://www.superqq.com/blog/2015/07/03/uibuttonzhong-de-san-ge-uiedgeinsetsshu-xing-([?]-)</id>
    <content type="html"><![CDATA[<p>随着时间的推移，随着我的坚持，公众号的订阅用户已经越来越多了。非常感谢大家的信任，我会再接再厉，努力为大家提供更多优秀的文章。</p>

<p>当初创建<a href="http://www.superqq.com/">iOS开发</a>（ <strong>iOSDevTip</strong> ），只是自己的兴趣。刚开始还不怎么会用微信公众号的后台，连发图文消息都不会。不知道怎么去编辑，当初的微信公众号后台也没有现在这么强大。我还以为就是个一对多的聊天工具呢。（😊）</p>

<p>慢慢的我学会了编辑文章，成为一个真正意义上的小编。每天负责为大家推送一些iOS相关的技术文章。每天到各大论坛、网站、大神的博客找一些好的文章。这个过程是漫长的，但是是值得的。</p>

<p>找文章的过程中，对自己来说，也是学习的好机会。如果没有这个公众号，我可能就看不到那么多的技术文章，也不能为大家推荐文章，自己也不会建立博客。</p>

<p>现在微信团队已经邀请我开通原创功能，以后，我就会多发一些原创内容。一个人的力量比较是有限的，订阅的用户如果有喜欢写技术文章的，欢迎头投稿给我，我的邮箱：<strong>worldligang@163.com</strong></p>

<p><strong>相信我，你的付出也会有回报的。</strong></p>

<p>今天是周六，不知道正在看文章的你有没有在加班。没有加班的，就好好休息一下吧；加班的，我只能同情一下啦。今天我们来看看UIButton中的三个UIEdgeInsets属性。</p>

<h2>UIEdgeInsets是什么</h2>

<p>UIEdgeInsets是什么？我们点进去看一下：</p>

<pre><code>typedef struct UIEdgeInsets {
    CGFloat top, left, bottom, right;  // specify amount to inset (positive) for each of the edges. values can be negative to 'outset'
} UIEdgeInsets;
</code></pre>

<p>UIEdgeInsets是个结构体类型。里面有四个参数，分别是：top, left, bottom, right。这四个参数表示距离上边界、左边界、下边界、右边界的距离。</p>

<h2>哪三个UIEdgeInsets属性</h2>

<p>不知道大家发现没有，UIButton里面有三个UIEdgeInsets属性，分别是：</p>

<pre><code>@property(nonatomic)          UIEdgeInsets contentEdgeInsets UI_APPEARANCE_SELECTOR; // default is UIEdgeInsetsZero

@property(nonatomic)          UIEdgeInsets titleEdgeInsets;                // default is UIEdgeInsetsZero

@property(nonatomic)          UIEdgeInsets imageEdgeInsets;                // default is UIEdgeInsetsZero
</code></pre>

<p>contentEdgeInsets后面有个UI_APPEARANCE_SELECTOR是什么意思呢？</p>

<pre><code>提示：UI_APPEARANCE_SELECTOR标记的属性都支持通过外观代理来定制。
</code></pre>

<p>举例，设置UIButton的contentEdgeInsets属性，可以直接调用：</p>

<pre><code>[[UIButton appearance] setTitleEdgeInsets:UIEdgeInsetsMake(0, 0, 0, 0)];
</code></pre>

<p>关于UIButton三个UIEdgeInsets属性的作用，下一篇文章介绍。</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/ios.png" alt="ios" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UIButton文字居左显示]]></title>
    <link href="http://www.superqq.com/blog/2015/07/02/uibuttonwen-zi-ju-zuo-xian-shi/"/>
    <updated>2015-07-02T22:18:01+08:00</updated>
    <id>http://www.superqq.com/blog/2015/07/02/uibuttonwen-zi-ju-zuo-xian-shi</id>
    <content type="html"><![CDATA[<p>题外话：时间依旧过的很快，不知不觉2015年就过去一半了。感觉自己好像没有大的改变，只能感叹时间飞逝，却不能有所收获。</p>

<p>我从来都不是一个安于现状的人，改变自己的想法从未停止过。我想大多数人都跟我有类似的想法。但是为什么很难有所成就呢？我觉得最重要的原因就是，<strong>只是想一下，而没有去行动</strong>。</p>

<p>这是一个全民创业的时代，不把握机会，只能错过。错过的机会，越多遗憾就越多。有句话说：<strong>老了之后，回想人生，不会因为自己做过什么而后悔，而会因为自己没有做过什么而遗憾。</strong>不想给人生留下遗憾，所以努力去尝试是唯一的选择。</p>

<p>随便感慨一下。每天上班太舒服了，淡忘了自己的理想，借此提醒一下自己。</p>

<p>来来，收回思路，今天我们来讲如何让UIButton文字居左显示？我们都应该写过让UILabel的text居左显示。代码也非常简单。</p>

<h2>UILabel文字居左显示</h2>

<p>实现文字居左显示代码如下：</p>

<pre><code>UILabel *label = [[UILabel alloc] init];
label.frame = CGRectMake(50, 100, 200, 50);
label.text = @"我是label";
label.textAlignment = NSTextAlignmentLeft;
label.backgroundColor = [UIColor orangeColor];
[self.view addSubview:label];
</code></pre>

<p>运行起来看一下效果：</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/labelleft.png" alt="1" /></p>

<p>label.backgroundColor = [UIColor orangeColor];设置label的背景颜色方便我们参考。你是不是这样做的。依次类推UIButton也很简单，你肯定能想到。我们来看看。</p>

<h2>UIButton文字居左显示</h2>

<h3>创建UIButton</h3>

<pre><code>UIButton *button = [[UIButton alloc] init];
//设置坐标
button.frame = CGRectMake(100, 100, 100, 50);
//设置标题
[button setTitle:@"我是UIButton" forState:UIControlStateNormal];
//设置标题颜色
[button setTitleColor:[UIColor blueColor] forState:UIControlStateNormal];
//设置背景颜色    
[button setBackgroundColor:[UIColor orangeColor]];
[self.view addSubview:button];
</code></pre>

<p>以上代码是创建一个button，设置坐标、标题、和标题颜色。</p>

<h3>让文字居左</h3>

<p>按照UILabel文字居左的写法，UIButton应该这么写：</p>

<pre><code> button.titleLabel.textAlignment = NSTextAlignmentLeft;
</code></pre>

<p>运行一下看一下效果：</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/buttonnoleft.png" alt="2" /></p>

<p>我们发现UIButton的文字还是居中显示。竟然没有居左显示，怎么办呢？进UIButton看看，还有哪些属性。很快发现：</p>

<pre><code>@property(nonatomic) UIControlContentHorizontalAlignment contentHorizontalAlignment; // how to position content hozontally inside control. default is center

typedef NS_ENUM(NSInteger, UIControlContentHorizontalAlignment) {
    UIControlContentHorizontalAlignmentCenter = 0,
    UIControlContentHorizontalAlignmentLeft   = 1,
    UIControlContentHorizontalAlignmentRight  = 2,
    UIControlContentHorizontalAlignmentFill   = 3,
};
</code></pre>

<h3>设置contentHorizontalAlignment</h3>

<pre><code>button.contentHorizontalAlignment = UIControlContentHorizontalAlignmentLeft;
</code></pre>

<p>再次运行起来看效果：</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/buttonleft.png" alt="3" /></p>

<p>果然可以，是不是看着居左显示很难看，太靠边了。很简单，设置UIButton的titleEdgeInsets属性：</p>

<pre><code>button.titleEdgeInsets = UIEdgeInsetsMake(0, 10, 0, 0);
</code></pre>

<p>这样button的title就距左边10个像素的距离。</p>

<p>居右显示就很简单了：</p>

<pre><code>button.contentHorizontalAlignment = UIControlContentHorizontalAlignmentRight;
</code></pre>

<p>ok，UIButton文字居左显示完成了。更多iOS技术请点击<a href="www.superqq.com">刚刚在线</a> : <strong>www.superqq.com</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[EGOCache如何检测缓存时间过期]]></title>
    <link href="http://www.superqq.com/blog/2015/07/02/egocacheru-he-jian-ce-huan-cun-shi-jian-guo-qi/"/>
    <updated>2015-07-02T00:38:14+08:00</updated>
    <id>http://www.superqq.com/blog/2015/07/02/egocacheru-he-jian-ce-huan-cun-shi-jian-guo-qi</id>
    <content type="html"><![CDATA[<blockquote><p>子曰:学而不思则罔,思而不学则殆。</p></blockquote>

<p>在上一篇文章中：<a href="http://www.superqq.com/blog/2015/07/01/egocachehuan-cun-kuang-jia-xiang-xi-jiang-jie/">EGOCache缓存框架详细讲解</a> 提到<strong>EGOCache</strong>可以设定缓存过期时间，默认是1天。查看了一下EGOCache源码，设置默认时间：</p>

<pre><code>    [self setDefaultTimeoutInterval:86400];

    //86400 = 24 * 60 * 60 刚好是一天时间。
</code></pre>

<p>EGOCache为什么要提供设定缓存过期时间呢？或者说设定缓存过期时间有什么好处呢？我觉得最大的好处就是可以定时清除缓存。可以设置某一项的缓存时间，很方便管理缓存。</p>

<p>那么问题来了：</p>

<ol>
<li>EGOCache是怎么检测缓存过期时间的呢？</li>
<li>检测到时间过期之后，什么时候触发删除缓存项的？</li>
</ol>


<p>带着这两个问题，我们来继续分析。</p>

<h2>你会怎么实现</h2>

<p>记得在公司里，老板经常会举这样的例子：</p>

<pre><code>某某同志，刚来我们公司的时候，遇到问题就知道抱怨。从来不知道去思考怎么解决，只知道把问题抛给领导。工作半年下来，成长了很多。现在碰到问题，不仅把问题抛出来，而且还提供了自己的解决方案...
</code></pre>

<p>类似的例子，相信大家都听过。同样，既然前面我们提出这两个问题，我们也先来思考一下，如果我们来做该怎么解决？</p>

<p>如果让我来写的话，我脑海里初步实现方法有几个：</p>

<ol>
<li>通过定时器来轮询，每隔一段时间检测一次。</li>
<li>写一个while循环来检测。</li>
<li>每次去读取缓存项的时候，判断缓存时间有没有过期。没过期，就返回读取的缓存项；否则，返回nil。</li>
</ol>


<p>当然，还有一些方法，不一一例举了。仔细想想，这些方法弊端很容易显露出来。</p>

<ol>
<li>为了小小的缓存时间，就用定时器轮询，显然是资源浪费</li>
<li>跟方法1差不多。</li>
<li>每次读取的时候判断是否过期，如果一直不读取，app的缓存会越来越大，也不可取。</li>
</ol>


<p>这些方法都被排除了，还有好的方法吗？继续往下看：</p>

<h2>EGOCache是怎么实现的？</h2>

<p>仔细查看EGOCache源码，发现在initWithCacheDirectory:方法里，每次初始化EGOCache实例对象的时，会遍历一遍plist文件中所有已存在的缓存项，拿每个缓存项的时间和当前时间作比较，缓存项过期时间早于当前时间，则删除对应缓存文件，并删除 plist 文件中对应 key 的记录。</p>

<p>具体实现代码如下：</p>

<h3>读取缓存项信息</h3>

<pre><code>_cacheInfo = [[NSDictionary dictionaryWithContentsOfFile:cachePathForKey(_directory, @"EGOCache.plist")] mutableCopy];

if(!_cacheInfo) {
    _cacheInfo = [[NSMutableDictionary alloc] init];
}
</code></pre>

<h3>获取当前时间的NSTimeInterval</h3>

<pre><code>NSTimeInterval now = [[NSDate date] timeIntervalSinceReferenceDate];
</code></pre>

<h3>声明removedKeys保存过期的缓存项对应的key</h3>

<pre><code>NSMutableArray* removedKeys = [[NSMutableArray alloc] init];
</code></pre>

<h3>遍历缓存项信息并判断缓存时间</h3>

<pre><code>for(NSString* key in _cacheInfo) {
    //判断缓存项过期时间是否早于当前时间
    if([_cacheInfo[key] timeIntervalSinceReferenceDate] &lt;= now) {
        //如果缓存项过期时间早于当前时间，移除缓存项
        [[NSFileManager defaultManager] removeItemAtPath:cachePathForKey(_directory, key) error:NULL];
        //把过期的缓存项对于的key保存到removedKeys里面
        [removedKeys addObject:key];
    }
}
</code></pre>

<h3>删除过期缓存项对于的key</h3>

<pre><code>[_cacheInfo removeObjectsForKeys:removedKeys];
</code></pre>

<p>看到这些，是不是觉得人家思路特牛叉，反正，我是觉得这个作者不简单。到这一步就解决了吗？</p>

<h2>EGOCache还做了什么？</h2>

<p>细心的童鞋会发现：<strong>EGOCache是个<a href="http://www.superqq.com/blog/2015/06/13/ios-she-ji-mo-shi-xi-lie-:singleton-dan-li-mo-shi/">单列类</a></strong>，也就是说整个程序应用周期只初始化一次。</p>

<pre><code>+ (instancetype)globalCache {
    static id instance;

    static dispatch_once_t onceToken;
    dispatch_once(&amp;onceToken, ^{
        instance = [[[self class] alloc] init];
    });

    return instance;
}
</code></pre>

<p>每次初始化的时候去判断了缓存项是否过期，这样做非常正确。思考一个场景：</p>

<ol>
<li>用户打开app，EGOCache被初始化，并判断了缓存项是否过期。</li>
<li>如果刚好有一些缓存项在EGOCache被初始化之后过期。这个时候我们依然可以读到这个缓存项。这就不对了。</li>
</ol>


<p>继续分析EGOCache源码发现，EGOCache在读取一个缓存项的时候，先判断缓存项是否存在，然后读取缓存项（注意：是读取EGOCache初始化的时候没有过期的缓存项，并没有说现在没有过期），最后去判断读取到的缓存项跟当前时间相比是否过期.</p>

<p>具体实现如下：</p>

<pre><code>- (BOOL)hasCacheForKey:(NSString*)key {
    //读取EGOCache初始化的时候没有过期的缓存项
    NSDate* date = [self dateForKey:key];
    if(date == nil) return NO;
    //判断读取到的缓存项当前是否过期
    if([date timeIntervalSinceReferenceDate] &lt; CFAbsoluteTimeGetCurrent()) return NO;

    return [[NSFileManager defaultManager] fileExistsAtPath:cachePathForKey(_directory, key)];
}

- (NSDate*)dateForKey:(NSString*)key {
    __block NSDate* date = nil;

    dispatch_sync(_frozenCacheInfoQueue, ^{
        date = (self.frozenCacheInfo)[key];
    });

    return date;
}
</code></pre>

<p>EGOCache检测缓存时间过期的思路值得学习，以后遇到类似场景，完全可以借鉴。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[EGOCache缓存框架详细讲解]]></title>
    <link href="http://www.superqq.com/blog/2015/07/01/egocachehuan-cun-kuang-jia-xiang-xi-jiang-jie/"/>
    <updated>2015-07-01T00:10:18+08:00</updated>
    <id>http://www.superqq.com/blog/2015/07/01/egocachehuan-cun-kuang-jia-xiang-xi-jiang-jie</id>
    <content type="html"><![CDATA[<p><strong>EGOCache</strong>是一个轻量级的缓存框架。用法简单方便，在现在的项目中，我就用到EGOCache来缓存下载过的照片和字符串。</p>

<p>有人可能会问到，缓存照片还需要用EGOCache吗？<a href="http://www.superqq.com/blog/2014/11/07/ioswang-luo-bian-cheng-zhi-afnetworkingshi-yong/">AFNetworking</a>和<a href="http://www.superqq.com/blog/2015/06/09/sdwebimagejia-zai-tu-pian-huan-cun-tu-pian/">SDWebImage</a>不是已经有这些功能了吗？</p>

<p>是的，不过AFNetworking和SDWebImage是http。我的项目用的是socket，所以我选择EGOCache来做缓存。用下来觉得EGOCache还是挺强大的。</p>

<h2>EGOCache简介</h2>

<pre><code>EGOCache is a simple, thread-safe key value cache store. It has native support for NSString, UI/NSImage, and NSData, but can store anything that implements &lt;NSCoding&gt;. All cached items expire after the timeout, which by default, is one day.
</code></pre>

<p>翻译过来就是：EGOCache一个简单、线程安全的基于 key-value 的缓存框架，原生支持NSString、UI/NSImage、和NSData，也支持储存任何实现<NSCoding>协议的类，可以设定缓存过期时间，默认是1天。</p>

<p>EGOCache只有一个类，EGOCache.h和EGOCache.m两个文件。用法也比较容易掌握，仔细研究一下EGOCache.h的方法，很快就可以上手。</p>

<p>EGOCache只提供了磁盘缓存，没有提供内存缓存。同时，也提供了清理缓存的方法：</p>

<pre><code>- (void)clearCache;
</code></pre>

<p>EGOCache还提供了判断缓存是否存在的方法：</p>

<pre><code>- (BOOL)hasCacheForKey:(NSString* __nonnull)key;
</code></pre>

<h2>通过Cocoapods直接加入项目</h2>

<p>直接在你的项目的Podfile加入下面一行：</p>

<pre><code>pod 'EGOCache'
</code></pre>

<p>然后执行：</p>

<pre><code>$ pod update
</code></pre>

<h2>EGOCache用法</h2>

<h3>用EGOCache缓存NSString</h3>

<p>存储：</p>

<pre><code>NSString *saveString = @"把我保存起来吧";
[[EGOCache globalCache] setString:saveString forKey:[NSString stringWithFormat:@"EGOImageLoader-%lu", (unsigned long)[saveString hash]] withTimeoutInterval:24*60*60];
</code></pre>

<p>读取：</p>

<pre><code>NSString *getSaveString = [[EGOCache globalCache] stringForKey:[NSString stringWithFormat:@"EGOImageLoader-%lu", (unsigned long)[@"SaveString" hash]]];
</code></pre>

<p>是不是感觉跟NSDictionary很相似，确实，前面我们说了EGOCache是基于key-value 的缓存框架。</p>

<h3>用EGOCache缓存UIImage</h3>

<p>存储：</p>

<pre><code> UIImage *saveImage = [UIImage imageNamed:@"iOSDevTip"];
[[EGOCache globalCache] setImage:saveImage forKey:[NSString stringWithFormat:@"EGOImageLoader-%lu", (unsigned long)[@"SaveImage" hash]] withTimeoutInterval:24*60*60];
</code></pre>

<p>读取：</p>

<pre><code>UIImage *getSaveImage = [[EGOCache globalCache] imageForKey:[NSString stringWithFormat:@"EGOImageLoader-%lu", (unsigned long)[@"SaveImage" hash]]];
</code></pre>

<h3>用EGOCache缓存NSData</h3>

<p>存储：</p>

<pre><code>NSData *saveData = [NSData data];
[[EGOCache globalCache] setData:saveData forKey:[NSString stringWithFormat:@"EGOImageLoader-%lu", (unsigned long)[@"SaveData" hash]] withTimeoutInterval:24*60*60];
</code></pre>

<p>读取：</p>

<pre><code>UIImage *getSaveData = [[EGOCache globalCache] dataForKey:[NSString stringWithFormat:@"EGOImageLoader-%lu", (unsigned long)[@"SaveData" hash]]];
</code></pre>

<h2>EGOCache源码下载</h2>

<p><a href="https://github.com/enormego/EGOCache">EGOCache</a></p>
]]></content>
  </entry>
  
</feed>
