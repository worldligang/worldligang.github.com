<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ios开发 | 刚刚在线]]></title>
  <link href="http://www.superqq.com/blog/categories/ioskai-fa/atom.xml" rel="self"/>
  <link href="http://www.superqq.com/"/>
  <updated>2015-07-09T13:36:09+08:00</updated>
  <id>http://www.superqq.com/</id>
  <author>
    <name><![CDATA[李刚]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[UIWebView用法详解及代码分享]]></title>
    <link href="http://www.superqq.com/blog/2015/07/08/uiwebviewyong-fa-xiang-jie/"/>
    <updated>2015-07-08T23:52:34+08:00</updated>
    <id>http://www.superqq.com/blog/2015/07/08/uiwebviewyong-fa-xiang-jie</id>
    <content type="html"><![CDATA[<p>今天加入一个QQ群，也算是一个圈子，群主的要求是满足他的三个条件。经过与群主的沟通，终于得到通过，顺利加入。</p>

<p>群主是一个93年的小伙，而且是河南的老乡。没想到小伙子这么有号召力。我也是偶然在我的空间发现他的，看他每天发的文章，还挺有意思。</p>

<p><strong>90后的小伙子都这么厉害了，有什么理由不努力奋斗呢！</strong>多加入以下圈子，认识一下身边的牛人。说不定会有意外的收获。</p>

<p>今天我们来详细UIWebView用法。UIWebView是iOS内置的浏览器控件，可以浏览网页、打开文档等 能够加载html/htm、pdf、docx、txt等格式的文件.</p>

<p>用UIWebView我们就可以做一个简易的浏览器。效果如下：</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/webview1.png" alt="1" /></p>

<h2>创建UIWebView</h2>

<p>首先创建UIWebView，这个不难，设置frame，然后添加到self.view上即可：</p>

<pre><code>UIWebView *webView = [[UIWebView alloc] initWithFrame:self.view.bounds];
webView.scalesPageToFit = YES;//自动对页面进行缩放以适应屏幕
[self.view addSubview:webView];
</code></pre>

<h2>UIWebView加载网络地址</h2>

<p>用UIWebView来加载网络地址，那我的博客：<strong><a href="http://www.superqq.com">http://www.superqq.com</a></strong> 来举例。代码如下：</p>

<pre><code>NSURLRequest *request =[NSURLRequest requestWithURL:[NSURL URLWithString:@"http://www.superqq.com"]];
[self.view addSubview:webView];
[webView loadRequest:request];
</code></pre>

<h2>UIWebView加载本地资源</h2>

<h3>通过NSURLRequest加载</h3>

<pre><code>NSString *path = [[NSBundle mainBundle] pathForResource:@"swift" ofType:@"html"];
NSURL* url = [NSURL   fileURLWithPath:path];//创建URL
NSURLRequest* request = [NSURLRequest requestWithURL:url];//创建NSURLRequest
[webView loadRequest:request];//加载
</code></pre>

<h3>通过NSString加载</h3>

<p>UIWebView 还支持将一个NSString对象作为源来加载。你可以为其提供一个基础URL，来指导UIWebView对象如何跟随链接和加载远程资源：</p>

<pre><code>NSString *path = [[NSBundle mainBundle] pathForResource:@"index" ofType:@"html"];
NSString *htmlString = [NSString stringWithContentsOfFile:path encoding:NSUTF8StringEncoding error:nil];
[webView loadHTMLString:htmlString baseURL:[NSURL URLWithString:path]];
</code></pre>

<h2>自动检测电话</h2>

<p>设置这个属性，如果在加载的网页中遇到电话号码，直接单击就可以拨打，非常方便：</p>

<pre><code>webView.dataDetectorTypes = UIDataDetectorTypePhoneNumber;//自动检测网页上的电话号码，单击可以拨打
</code></pre>

<h2>设置代理和代理方法</h2>

<p>UIWebView有五个代理方法，我们可以在不同的代理方法中，完成不同的需求。</p>

<pre><code>//设置代理
webView.delegate = self;

//代理方法
- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType
{
    //返回YES，进行加载。通过UIWebViewNavigationType可以得到请求发起的原因
    return YES;
}

- (void)webViewDidStartLoad:(UIWebView *)webView
{
    //开始加载，可以加上风火轮（也叫菊花）
}

- (void)webViewDidFinishLoad:(UIWebView *)webView
{
    //完成加载
}

- (void)webView:(UIWebView *)webView didFailLoadWithError:(NSError *)error
{
    //加载出错
}
</code></pre>

<h2>创建加载他、停止、后退、前进按钮</h2>

<p>创建四个按钮，分别是加载按钮、停止按钮、返回按钮、前进按钮：</p>

<pre><code>NSArray *array = [NSArray arrayWithObjects:@"加载",@"停止",@"返回",@"前进", nil];
    int far = (SCREEN.width - 200)/5;
    for (int i = 0; i &lt; array.count; i++) {
        UIButton *button = [[UIButton alloc] init];
        button.frame = CGRectMake( (i + 1) * far + 50 * i, SCREEN.height - 60, 50, 40);
        button.tag = 200 + i;
        [button addTarget:self action:@selector(actionClick:) forControlEvents:UIControlEventTouchUpInside];
        [button setTitleColor:[UIColor blueColor] forState:UIControlStateNormal];
        [button setBackgroundColor:[UIColor orangeColor]];
        [button setTitle:array[i] forState:UIControlStateNormal];
        [self.view addSubview:button];
    }
</code></pre>

<h2>前进后退</h2>

<p>给四个按钮绑定事件，根据tag值来区分每一个点击事件：</p>

<pre><code>- (void)actionClick:(UIButton *)button
{
    switch (button.tag) {
        case 200:
        {
            [self.webView reload];//加载
        }
            break;
        case 201:
        {
            [self.webView stopLoading];//停止加载
        }
            break;
        case 202:
        {
            [self.webView goBack];//返回
        }
            break;
        case 203:
        {
            [self.webView goForward];//前进
        }
            break;
        default:
            break;
    }
}
</code></pre>

<p>大功告成，再来看看效果：</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/webview2.png" alt="2" /></p>

<p>以上分享的内容我做了一个demo，需要的话可以点击这里下载：<a href="https://github.com/worldligang/UIWebViewDemo">UIWebView用法详解</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NSLocale的重要性和用法简介]]></title>
    <link href="http://www.superqq.com/blog/2015/07/07/nslocalede-zhong-yao-xing-he-yong-fa-jian-jie/"/>
    <updated>2015-07-07T22:33:47+08:00</updated>
    <id>http://www.superqq.com/blog/2015/07/07/nslocalede-zhong-yao-xing-he-yong-fa-jian-jie</id>
    <content type="html"><![CDATA[<p>股票还在努力的往下跌，怎么办呢？我这真是杞人忧天啊。谁说我不着急呢？我的模拟炒股都亏的过半了吧。你想想那些真真炒股的人该有多担心。</p>

<p>罢了罢了，我还是滚去撸代码，消灭bug吧。</p>

<h2>上百万APP你用过几个？</h2>

<p>随着iPhone的日趋强盛，随着AppStore的不断壮大，海量的应用如潮水般涌来。据统计AppStore上的应用早已过120万，Google Play Store更是超于AppStore，达到150万。</p>

<p>知道120万、150万是什么概念吗？人生不过短短两三万天。也就是说，如果你一天用一个APP的话，AppStore够你用40辈子，Google Play Store够你用50辈子，前提是，你必须生下来就开始玩手机。</p>

<p>这么多应用，不知道有没有你的贡献。估计正在看文章的你也贡献了好几个了吧。AppStore里面也有我的贡献。😊</p>

<p>开发一个APP不是那么容易的一件事，有很多坑等着你去踩。今天我们就抛出一个格式化时间的坑。</p>

<h2>NSDateFormatter格式化时间</h2>

<p>之前的文章，讲到过：<a href="http://www.superqq.com/blog/2015/06/26/nsdatehe-nsstringxiang-hu-zhuan-huan/">NSDate和NSString相互转换</a>。里面提到过如何讲NSDate转化成NSString。代码如下：</p>

<pre><code>//获取系统当前时间
NSDate *currentDate = [NSDate date];
//用于格式化NSDate对象
NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init];
//设置格式：zzz表示时区
[dateFormatter setDateFormat:@"yyyy-MM-dd HH:mm:ss zzz"];
//NSDate转NSString
NSString *currentDateString = [dateFormatter stringFromDate:currentDate];
//输出currentDateString
NSLog(@"%@",currentDateString);
</code></pre>

<p>运行起来，看看打印的内容：</p>

<pre><code>2015-07-07 22:08:57.422 TestDemo[6756:1555205] 2015-07-07 22:08:57
</code></pre>

<p>这样写是不是没有什么问题。看着应该是没什么问题，其实问题很大。但是如果你改一下系统设置：语言设置成印度尼西亚文，时间设置成12小时制。</p>

<p>大家应该知道如何去设置吧，不会设置的请不要告诉我你是一名<a href="http://www.superqq.com/blog/2015/06/25/ru-he-cheng-wei-%5B%3F%5D-ming-you-xiu-de-ioskai-fa-gong-cheng-shi/">iOS开发工程师</a>。再次编译起来，看看打印内容如下：</p>

<pre><code>2015-07-07 22:09:14.928 TestDemo[6762:1555466] 2015-07-07 10.09.14 PM
</code></pre>

<p>是不是愣住了，怎么会这么奇葩，时间怎么是.呢？还有更奇葩的呢，你去设置设置其他语言试试，也许有更多的收获。</p>

<h2>如何正确的格式化时间</h2>

<p>这也是我们这两天遇到的问题，跟用户几经沟通之后，终于抓到log，发现问题竟然是格式化导致的。怎么解决呢？</p>

<p>这个时候NSLocale的重要性就体现出来了。NSLocale作为大家都不常用的一个类，NSLocale类是将与国家和语言相关的信息进行简单的组合，包括货币、语言、国家等的信息。</p>

<p>所以很简单，我们把dateFormatter的locale属性改一下即可解决这个问题。将下面代码放在dateFormatter初始化之后：</p>

<pre><code>NSLocale *usLocale = [[NSLocale alloc] initWithLocaleIdentifier:@"en_US"];
dateFormatter.locale = usLocale;
</code></pre>

<p>看看问题解决没有，编译一下：</p>

<pre><code>2015-07-07 22:20:08.411 TestDemo[6769:1556968] 2015-07-07 22:20:08
</code></pre>

<p>果然，问题得到完美解决了。</p>

<h2>NSLocale用法简介</h2>

<h3>获取国家、货币、语言地区编码</h3>

<p>既然谈到NSLocale，我们就来简单了解一下：</p>

<pre><code>+ ISOCountryCodes// 所有的ISO定义的国家地区编码
+ ISOCurrencyCodes// 所有的ISO定义的货币编码
+ ISOLanguageCodes// 所有ISO定义的语言编码
</code></pre>

<p>以上我们可以用NSLog打印出来看一看。</p>

<h3>监听用户本地化的设置信息</h3>

<pre><code>FOUNDATION_EXPORT NSString * const NSCurrentLocaleDidChangeNotification NS_AVAILABLE(10_5, 2_0);
</code></pre>

<h3>获取当前系统设置语言的标识符</h3>

<pre><code>[[NSLocale currentLocale] localeIdentifier];
</code></pre>

<p>还有很多关于NSLocale的用法，自己动手多尝试。还有一个小问题。</p>

<h2>NSLocale怎么读？</h2>

<p>看了这么久的NSLocale了，你知道NSLocale怎么读吗？不要翻译噢，看看你读的到底对不对？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS开发自定义时间选取器]]></title>
    <link href="http://www.superqq.com/blog/2015/07/06/ioskai-fa-zi-ding-yi-shi-jian-xuan-qu-qi/"/>
    <updated>2015-07-06T23:40:21+08:00</updated>
    <id>http://www.superqq.com/blog/2015/07/06/ioskai-fa-zi-ding-yi-shi-jian-xuan-qu-qi</id>
    <content type="html"><![CDATA[<p>又是一年的暑假日期而至，小孩子放假，都会到在外打工的父母身边。孩子想父母，父母也思念着自己的孩子。我身边的亲戚朋友的孩子 也都来了。这个暑假又该热闹起来。</p>

<h2>努力什么时候都不晚</h2>

<p>我有一个表妹，今年参加完高考，对自己的成绩不是特别满意。上次我回老家，刚好她给我一起来上海。准备来上海锻炼一下。</p>

<p>车上我问她，准备去哪上学？她说不想上了，想打工。我没有怎么劝她，我想让她体验一下打工的生活，她就知道还是上学好。</p>

<p>一个高中生，出来找工作，困难可想而知。经姐姐介绍，进了一家餐厅工作。工资也不是很高。干了两天，我问她怎么样？她说，高二要是来让我体验一下，我一定能考上一本。</p>

<p>也许真的如她所说的那样，但是谁知道呢？时间也不会倒流，她也不再可能再参加一次高考了。人只有吃过苦头，才知道努力。这是件好事，大学好好把握也是一样的。</p>

<p><strong>无论处于什么困境，只要知道努力，我觉得什么时候都不晚。</strong>关注<a href="http://www.superqq.com/">iOS开发</a>微信公众号：<strong>iOSDevTip</strong></p>

<h2>自定义时间选取器</h2>

<p>每天都随便扯扯，回到正题。今天我们做一个时间选取器，很简单，效果如下：</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/time.png" alt="time" /></p>

<p>我们自定义一个LGDatePickerView，在LGDatePickerView里面实现。</p>

<h2>背景半透明</h2>

<p>背景是半透明的，点击的灰色背景的时候，时间选取器消失。在LGDatePickerView初始化方法里，代码如下：</p>

<pre><code>- (id)init
{
    self = [super init];
    if (self) {
  //背景半透明，绑定取消方法
    UIControl *control = [[UIControl alloc] initWithFrame:SCREEN_BOUNDS];
    control.backgroundColor = [UIColor colorWithRed:0.0/255.0 green:0.0/255.0 blue:0.0/255.0 alpha:0.5f];
    [self addSubview:control];
    [control addTarget:self action:@selector(actionCancel:) forControlEvents:UIControlEventTouchUpInside];     
     }
    return self;
}
</code></pre>

<p>绑定的actionCancel方法：</p>

<pre><code>- (void)actionCancel:(id)sender
{
    [self removeFromSuperview];
}
</code></pre>

<h2>确定取消按钮</h2>

<p>看到上面的确定取消按钮，你会怎么做，写一个UIView上面放两个UIButton。这样做也是可以实现的。我们还可以用UIToolbar。在LGDatePickerView初始化方法里加上下面这段代码：</p>

<pre><code> // Toolbar
UIToolbar *toolbar = [[UIToolbar alloc] initWithFrame:CGRectMake(0, SCREEN.height - 250, SCREEN.width, 50)];
toolbar.autoresizingMask = UIViewAutoresizingFlexibleTopMargin | UIViewAutoresizingFlexibleWidth;
UIBarButtonItem *itemCancelDone = [[UIBarButtonItem alloc] initWithTitle:@"确定" style:UIBarButtonItemStylePlain target:self action:@selector(actionConfirm:)];
UIBarButtonItem *itemCancel = [[UIBarButtonItem alloc] initWithTitle:@"取消" style:UIBarButtonItemStylePlain target:self action:@selector(actionCancel:)];
UIBarButtonItem *space = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFlexibleSpace target:nil action:nil];
[toolbar setItems:[NSArray arrayWithObjects:itemCancel,space,itemCancelDone, nil]];
[control addSubview:toolbar];
</code></pre>

<p>actionCancel上面已经实现了。下面实现actionConfirm方法。它有什么作用呢？</p>

<ul>
<li>点击的时候获取到时间，然后通过代理代理出去</li>
<li><p>时间选取器消失</p>

<pre><code>  - (void)actionConfirm:(id)sender
  {
      if ([self.delegate respondsToSelector:@selector(datePickerView:didSelectTime:)]) {
          [self.delegate datePickerView:self didSelectTime:self.datePicker.date];
      }
      [self removeFromSuperview];
  }
</code></pre></li>
</ul>


<h2>代理方法</h2>

<p>在LGDatePickerView.h</p>

<pre><code>@protocol LGDatePickerViewDelegate &lt;NSObject&gt;

- (void)datePickerView:(LGDatePickerView *)datepicker didSelectTime:(NSDate *)time;

@end
</code></pre>

<h2>创建UIDatePicker</h2>

<p>在LGDatePickerView.h定义一个全局变量：</p>

<pre><code>@property (nonatomic, strong) UIDatePicker *datePicker;
</code></pre>

<p>在LGDatePickerView初始化方法里加上下面这段代码：</p>

<pre><code>UIDatePicker *datePicker = [[UIDatePicker alloc] init];
datePicker.backgroundColor = [UIColor whiteColor];
datePicker.datePickerMode = UIDatePickerModeCountDownTimer;
datePicker.date = [NSDate date];
datePicker.frame = CGRectMake(0, SCREEN.height - 200, SCREEN.width, 220);
[control addSubview:datePicker];
self.datePicker = datePicker;
</code></pre>

<h2>使用LGDatePickerView</h2>

<p>使用起来很简单，创建一下，然后加载self.view上面即可：</p>

<pre><code>    LGDatePickerView *datePicker = [[LGDatePickerView alloc] init];
    datePicker.delegate = self;
    datePicker.datePicker.date = [NSDate date];
    datePicker.frame = self.view.bounds;
    [self.view addSubview:datePicker];
</code></pre>

<p>以上就实现了iOS开发自定义时间选取器，代码不难，有什么问题，欢迎提问哈。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UIButton中的三个UIEdgeInsets属性（二）]]></title>
    <link href="http://www.superqq.com/blog/2015/07/04/uibuttonzhong-de-san-ge-uiedgeinsetsshu-xing-(er-)/"/>
    <updated>2015-07-04T14:14:43+08:00</updated>
    <id>http://www.superqq.com/blog/2015/07/04/uibuttonzhong-de-san-ge-uiedgeinsetsshu-xing-(er-)</id>
    <content type="html"><![CDATA[<p>昨天去公司加班的人请举手，不是只有我一个吧？（😭）我觉得加班的人应该不少吧。今天周日，应该不需要去加班了。心里暗暗自喜，终于可以休息一天啦。（😄）</p>

<p>说到加班，应该是程序猿心里的痛啊。不加班吧，东西做不完；加班吧，身体吃不消。作为程序猿真的不容易，每天从早忙到晚。突然有一天，六点下班，看见太阳还在等我，心里被踢有多高兴。</p>

<p>弱弱的问一下：加班好不好？</p>

<p>要看这个问题问谁了。如果问老板，老板肯定美滋滋的说，加班好啊，说明你有责任心，有上进心，把公司当成自己的&hellip;</p>

<p>如果问我，哈哈，我当然说加班不好啦，不然会被打死的。开个玩笑。说句实话，加班肯定是不好的，尤其是对程序猿来说。每天面对电脑，每天坐着，时间长了，各种问题就凸显出来。</p>

<p>但是，我说加班不好有用吗？如果我要是老板，我就直接让员工在家办公。（😊）所以大家感觉支持我吧，说不定哪天我真的&hellip;</p>

<p>接着昨天的<a href="http://www.superqq.com/blog/2015/07/03/uibuttonzhong-de-san-ge-uiedgeinsetsshu-xing-%28%5B%3F%5D-%29/">UIButton中的三个UIEdgeInsets属性</a>，今天我们具体谈谈UIButton的contentEdgeInsets、titleEdgeInsets、imageEdgeInsets属性。</p>

<h2>创建UIButton</h2>

<pre><code>UIButton *button = [[UIButton alloc] init];
button.frame = CGRectMake(50, 200, 200, 50);
[button setTitle:@"我是UIButton" forState:UIControlStateNormal];
[button setTitleColor:[UIColor blueColor] forState:UIControlStateNormal];
[button setBackgroundColor:[UIColor orangeColor]];
button.titleLabel.textAlignment = NSTextAlignmentLeft;
button.contentHorizontalAlignment = UIControlContentHorizontalAlignmentLeft;
[self.view addSubview:button];
</code></pre>

<p>创建一个button，让button的title居左，以便观察：</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/button1.png" alt="1" /></p>

<h2>UIButton的contentEdgeInsets属性</h2>

<pre><code>@property(nonatomic)          UIEdgeInsets contentEdgeInsets UI_APPEARANCE_SELECTOR; // default is UIEdgeInsetsZero
</code></pre>

<p>contentEdgeInsets里有一个content应该指的就是UIButton的title。</p>

<h3>参数含义</h3>

<p>上一篇文章我们讲了UIEdgeInsets是个结构体类型。里面有四个参数，分别是：top, left, bottom, right。这四个参数表示距离上边界、左边界、下边界、右边界的距离。</p>

<p>这四个参数的值可以为正值，也可以为负值。拿left举例：</p>

<pre><code>left = 10; //代表以当前位置为基准，向右移动10个像素
left = -10; //代表以当前位置为基准，向左移动10个像素
</code></pre>

<h3>向右移动20个像素</h3>

<pre><code>button.contentEdgeInsets = UIEdgeInsetsMake(0, 20, 0, 0);
</code></pre>

<p>向右移动20个像素，left = 20，就可以了。</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/button2.png" alt="2" /></p>

<h3>向左移动20个像素</h3>

<pre><code>button.contentEdgeInsets = UIEdgeInsetsMake(0, -20, 0, 0);
</code></pre>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/button3.png" alt="2" /></p>

<h2>UIButton的titleEdgeInsets属性</h2>

<p>titleEdgeInsets和contentEdgeInsets的作用差不多。我们及设置contentEdgeInsets，又设置titleEdgeInsets，会怎样呢？</p>

<pre><code>button.titleEdgeInsets = UIEdgeInsetsMake(0, 20, 0, 0);
button.contentEdgeInsets = UIEdgeInsetsMake(0, 20 , 0, 0);
</code></pre>

<p>看一下效果：</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/button4.png" alt="3" /></p>

<h2>UIButton的titleEdgeInsets属性</h2>

<h3>创建一个带照片的button</h3>

<pre><code>UIButton *button = [[UIButton alloc] init];
button.frame = CGRectMake(50, 200, 200, 200);
[button setTitleColor:[UIColor blueColor] forState:UIControlStateNormal];
[button setBackgroundColor:[UIColor orangeColor]];
[button setImage:[UIImage imageNamed:@"test"] forState:UIControlStateNormal];
[self.view addSubview:button];
</code></pre>

<p>运行一下：</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/button5.png" alt="5" /></p>

<h3>向右移动50个像素</h3>

<pre><code>button.imageEdgeInsets = UIEdgeInsetsMake(0, 50, 0, 0);
</code></pre>

<p>看看效果：</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/button6.png" alt="6" /></p>

<h3>向左移动50个像素</h3>

<pre><code>button.imageEdgeInsets = UIEdgeInsetsMake(0, -50, 0, 0);
</code></pre>

<p>看看效果：</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/button7.png" alt="7" /></p>

<p>大家可以自行设置其他三个参数看看效果是怎样的，自己动手便于理解。</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/ios.png" alt="ios" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UIButton中的三个UIEdgeInsets属性（一）]]></title>
    <link href="http://www.superqq.com/blog/2015/07/03/uibuttonzhong-de-san-ge-uiedgeinsetsshu-xing-(%5B%3F%5D-)/"/>
    <updated>2015-07-03T23:29:55+08:00</updated>
    <id>http://www.superqq.com/blog/2015/07/03/uibuttonzhong-de-san-ge-uiedgeinsetsshu-xing-([?]-)</id>
    <content type="html"><![CDATA[<p>随着时间的推移，随着我的坚持，公众号的订阅用户已经越来越多了。非常感谢大家的信任，我会再接再厉，努力为大家提供更多优秀的文章。</p>

<p>当初创建<a href="http://www.superqq.com/">iOS开发</a>（ <strong>iOSDevTip</strong> ），只是自己的兴趣。刚开始还不怎么会用微信公众号的后台，连发图文消息都不会。不知道怎么去编辑，当初的微信公众号后台也没有现在这么强大。我还以为就是个一对多的聊天工具呢。（😊）</p>

<p>慢慢的我学会了编辑文章，成为一个真正意义上的小编。每天负责为大家推送一些iOS相关的技术文章。每天到各大论坛、网站、大神的博客找一些好的文章。这个过程是漫长的，但是是值得的。</p>

<p>找文章的过程中，对自己来说，也是学习的好机会。如果没有这个公众号，我可能就看不到那么多的技术文章，也不能为大家推荐文章，自己也不会建立博客。</p>

<p>现在微信团队已经邀请我开通原创功能，以后，我就会多发一些原创内容。一个人的力量比较是有限的，订阅的用户如果有喜欢写技术文章的，欢迎头投稿给我，我的邮箱：<strong>worldligang@163.com</strong></p>

<p><strong>相信我，你的付出也会有回报的。</strong></p>

<p>今天是周六，不知道正在看文章的你有没有在加班。没有加班的，就好好休息一下吧；加班的，我只能同情一下啦。今天我们来看看UIButton中的三个UIEdgeInsets属性。</p>

<h2>UIEdgeInsets是什么</h2>

<p>UIEdgeInsets是什么？我们点进去看一下：</p>

<pre><code>typedef struct UIEdgeInsets {
    CGFloat top, left, bottom, right;  // specify amount to inset (positive) for each of the edges. values can be negative to 'outset'
} UIEdgeInsets;
</code></pre>

<p>UIEdgeInsets是个结构体类型。里面有四个参数，分别是：top, left, bottom, right。这四个参数表示距离上边界、左边界、下边界、右边界的距离。</p>

<h2>哪三个UIEdgeInsets属性</h2>

<p>不知道大家发现没有，UIButton里面有三个UIEdgeInsets属性，分别是：</p>

<pre><code>@property(nonatomic)          UIEdgeInsets contentEdgeInsets UI_APPEARANCE_SELECTOR; // default is UIEdgeInsetsZero

@property(nonatomic)          UIEdgeInsets titleEdgeInsets;                // default is UIEdgeInsetsZero

@property(nonatomic)          UIEdgeInsets imageEdgeInsets;                // default is UIEdgeInsetsZero
</code></pre>

<p>contentEdgeInsets后面有个UI_APPEARANCE_SELECTOR是什么意思呢？</p>

<pre><code>提示：UI_APPEARANCE_SELECTOR标记的属性都支持通过外观代理来定制。
</code></pre>

<p>举例，设置UIButton的contentEdgeInsets属性，可以直接调用：</p>

<pre><code>[[UIButton appearance] setTitleEdgeInsets:UIEdgeInsetsMake(0, 0, 0, 0)];
</code></pre>

<p>关于UIButton三个UIEdgeInsets属性的作用，下一篇文章介绍。</p>

<p><img src="http://7xjrlb.com1.z0.glb.clouddn.com/ios.png" alt="ios" /></p>
]]></content>
  </entry>
  
</feed>
