<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[刚刚在线]]></title>
  <link href="http://www.superqq.com/atom.xml" rel="self"/>
  <link href="http://www.superqq.com/"/>
  <updated>2015-12-06T20:24:39+08:00</updated>
  <id>http://www.superqq.com/</id>
  <author>
    <name><![CDATA[李刚]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[一个弹性侧滑菜单]]></title>
    <link href="http://www.superqq.com/blog/2015/12/06/an-elastic-sliding-menu/"/>
    <updated>2015-12-06T20:19:51+08:00</updated>
    <id>http://www.superqq.com/blog/2015/12/06/an-elastic-sliding-menu</id>
    <content type="html"><![CDATA[<pre><code>地址：https://github.com/lilei644/LLSlideMenu

作者lilei644
</code></pre>

<h1>LLSlideMenu</h1>

<p>This is a spring slide menu for iOS apps<br>
一个弹性侧滑菜单<br><br>
弹性动画原理借鉴该<a href="https://github.com/KittenYang/KYAnimatedPageControl">项目</a>中阻尼函数实现</p>

<!--more-->


<h2>Preview预览</h2>

<p><img src="http://images.90159.com/12/sliding.gif" alt="Preview" /></p>

<h2>Installation &nbsp;安装</h2>

<ul>
<li>pod</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>1.pod "LLSlideMenu"
</span><span class='line'>2.pod install       // 若获取失败请重新 pod setup
</span><span class='line'>3.#import "LLSlideMenu.h"</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Common</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>1.Add "LLSlideMenu" files to your Project   // 直接导入“LLSlideMenu”文件夹到项目中
</span><span class='line'>2.#import "LLSlideMenu.h"</span></code></pre></td></tr></table></div></figure>


<h2>Usage &nbsp;用法</h2>

<ul>
<li>Init &nbsp;初始化</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>LLSlideMune *slideMenu = [[LLSlideMune alloc] init];
</span><span class='line'>[self.view addSubview:slideMenu];</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Base Property &nbsp;基本属性</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// 设置菜单宽度  menu width
</span><span class='line'>_slideMenu.ll_menuWidth = 200.f;
</span><span class='line'>
</span><span class='line'>// 设置菜单背景色  background color
</span><span class='line'>_slideMenu.ll_menuBackgroundColor = [UIColor redColor];
</span><span class='line'>
</span><span class='line'>// 设置菜单背景图片  background image
</span><span class='line'>_slideMenu.ll_menuBackgroundImage = [UIImage imageNamed:@"image"];
</span><span class='line'>
</span><span class='line'>// 背景色或背景图片设置一个即可  background image and color select one
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Open or Close &nbsp;打开或关闭</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[_slideMenu ll_openSlideMenu];      // 打开  open
</span><span class='line'>[_slideMenu ll_closeSlideMenu];     // 关闭  close</span></code></pre></td></tr></table></div></figure>


<ul>
<li>GestureRecognizer &nbsp;手势监听</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>_slideMenu.ll_distance = 100.f;     // 拉伸距离  pulling distance</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Spring and Frames &nbsp;弹力和关键帧设置（可控制弹性效果和时间）</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>_slideMenu.ll_springDamping = 20;       // 阻力
</span><span class='line'>_slideMenu.ll_springVelocity = 15;      // 速度
</span><span class='line'>_slideMenu.ll_springFramesNum = 60;     // 关键帧数量</span></code></pre></td></tr></table></div></figure>


<h2>Requirements &nbsp;版本要求</h2>

<p>IOS 6.0 Above</p>

<h2>License</h2>

<p>LLSlideMenu is provided under the MIT license. See LICENSE file for details.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VIP群福利：Git使用教程（视频+PPT）]]></title>
    <link href="http://www.superqq.com/blog/2015/12/05/git-use-video-ppt/"/>
    <updated>2015-12-05T20:07:12+08:00</updated>
    <id>http://www.superqq.com/blog/2015/12/05/git-use-video-ppt</id>
    <content type="html"><![CDATA[<p>天才帝一步应用源代码分享到<a href="http://www.superqq.com/blog/2015/11/19/create-high-efficiency-ios-group/">iOS开发实战交流VIP群</a>，已经有不少朋友下载。这个APP也是一个小小的想法，希望能激发大家的灵感，做出更多有意义的属于自己的APP。</p>

<p>iOS开发实战交流VIP群已经有几百位朋友加入，这里是一个非常不错的交流平台，欢迎更多朋友加入！详情点击这里。</p>

<p>愿大家除了思维上、技术上有所提高，更能成为网络上无话不谈的知心朋友！</p>

<p>今天给大家分享Git使用教程：</p>

<h2>Git是什么？</h2>

<!--more-->


<p>Git是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。作为一名iOS开发者，应该掌握！当然，也有朋友用SVN来管理，SVN也是有相应的命令。</p>

<p>在使用Git之前，我还用过最笨的办法通过手动来管理代码。管理起来相当不便，尤其是团队多人开发时，根本无法用手动来管理代码。</p>

<p>直到接触的Git，才感受到它的强大。Git其实没有大家想象的那么难，刚开始接触的时候，可能不知道如何下手。当你真正的用一段时间之后，你会掌握一些常用的命令，比如：git status、git commit -m “message”、也会理解里面的一些术语，比如仓库、分支等等。</p>

<h2>Git视频教程</h2>

<p>为了帮助大家快速上手Git，上周录制了一期视频教程《Git使用教程》已经上传到iOS开发实战交流VIP群。欢迎大家到群文件里面下载。</p>

<p>视频里面有讲到用Homebrew来安装Git，大家电脑上如果没有装Homebrew，可以通过下面的命令来安装：</p>

<pre><code>ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
</code></pre>

<p>Homebrew的官方：</p>

<pre><code>http://brew.sh/
</code></pre>

<p>如果在看视频教程中，遇到问题，可以到VIP群里讨论。来吧，一起征服Git！</p>

<h2>PPT截图</h2>

<p>PPT里面整理了Git的常用命令、别名设置、一些资料网站等等，我把PPT里面的内容整理出来，大家一起学习：</p>

<p><img src="http://images.90159.com/git/1.png" alt="1" />
<img src="http://images.90159.com/git/2.png" alt="1" />
<img src="http://images.90159.com/git/3.png" alt="1" />
<img src="http://images.90159.com/git/4.png" alt="1" />
<img src="http://images.90159.com/git/5.png" alt="1" />
<img src="http://images.90159.com/git/6.png" alt="1" />
<img src="http://images.90159.com/git/7.png" alt="1" />
<img src="http://images.90159.com/git/8.png" alt="1" />
<img src="http://images.90159.com/git/9.png" alt="1" />
<img src="http://images.90159.com/git/10.png" alt="1" />
<img src="http://images.90159.com/git/11.png" alt="1" />
<img src="http://images.90159.com/git/12.png" alt="1" />
<img src="http://images.90159.com/git/13.png" alt="1" />
<img src="http://images.90159.com/git/14.png" alt="1" />
<img src="http://images.90159.com/git/15.png" alt="1" />
<img src="http://images.90159.com/git/16.png" alt="1" />
<img src="http://images.90159.com/git/17.png" alt="1" />
<img src="http://images.90159.com/git/18.png" alt="1" />
<img src="http://images.90159.com/git/19.png" alt="1" />
<img src="http://images.90159.com/git/20.png" alt="1" />
<img src="http://images.90159.com/git/21.png" alt="1" />
<img src="http://images.90159.com/git/22.png" alt="1" />
<img src="http://images.90159.com/git/23.png" alt="1" />
<img src="http://images.90159.com/git/24.png" alt="1" />
<img src="http://images.90159.com/git/25.png" alt="1" />
<img src="http://images.90159.com/git/26.png" alt="1" />
<img src="http://images.90159.com/git/27.png" alt="1" />
<img src="http://images.90159.com/git/28.png" alt="1" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Swift开源一天Github收获15000多star]]></title>
    <link href="http://www.superqq.com/blog/2015/12/04/swift-source-code/"/>
    <updated>2015-12-04T22:10:48+08:00</updated>
    <id>http://www.superqq.com/blog/2015/12/04/swift-source-code</id>
    <content type="html"><![CDATA[<p>快，快，快！动动您的小手，分享给更多朋友！</p>

<p>苹果去年推出了全新的编程语言Swift，试图让iOS开发更简单，也承诺开源Swift代码。</p>

<p>昨天，苹果宣布：开源Swift，引起不少轰动，短短一天不到得时间，github上就有9000多star。对于广大开发者来说，真是一大福利！大家快取看看吧，一睹真容！</p>

<p>swift开源地址：<a href="https://github.com/apple/swift">https://github.com/apple/swift</a></p>

<p>官方Linux版本：<a href="https://swift.org/blog/swift-linux-port/">https://swift.org/blog/swift-linux-port/</a></p>

<p>苹果官方github地址：<a href="https://github.com/apple">https://github.com/apple</a></p>

<p><a href="https://swift.org">https://swift.org</a> 是苹果官方的开发者社区，这里有Swift开发教程和指南。是个学习的好地方！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[升级Xcode7之后VVDocumenter-Xcode不能用的解决办法]]></title>
    <link href="http://www.superqq.com/blog/2015/12/03/vvdocumenter-xcode7-not-work/"/>
    <updated>2015-12-03T22:24:57+08:00</updated>
    <id>http://www.superqq.com/blog/2015/12/03/vvdocumenter-xcode7-not-work</id>
    <content type="html"><![CDATA[<p>VVDocumenter-Xcode是Xcode上一款快速添加标准注释，并可以自动生成文档的插件。有了VVDocumenter-Xcode，规范化的注释，只需要输入三个斜线“///”就可以搞定，非常方面实用，目前已经支持Swift。</p>

<p>Objective-C效果图：</p>

<p><img src="http://images.90159.com/11/vvdocumenter1.gif" alt="VVDocumenter1" /></p>

<p>Swift效果图：</p>

<p><img src="http://images.90159.com/11/vvdocumenter2.gif" alt="VVDocumenter1" /></p>

<p>从Xcode 5开始，苹果要求加入UUID证书从而保证插件的稳定性。因此Xcode版本更新之后需要在VVDocumenter-Xcode的Info.plist文件中添加Xcode的UUID。</p>

<h2>步骤如下：</h2>

<h3>一、查看Xcode的UUID</h3>

<h4>方式1</h4>

<p>在终端执行</p>

<pre><code>defaults read /Applications/Xcode.app/Contents/Info DVTPlugInCompatibilityUUID
</code></pre>

<p><img src="http://images.90159.com/11/vvdocumenter3.jpg" alt="VVDocumenter1" /></p>

<p>拷贝选中的字符串。</p>

<h4>方式2</h4>

<p>在/Applications目录中找到Xcode.app，右键”显示包内容”，进入Contents文件夹，双击Info.plist打开，找到DVTPlugInCompatibilityUUID，拷贝后面的字符串。</p>

<h3>二、添加Xcode的UUID到VVDocumenter-Xcode的Info.plist文件</h3>

<h4>方式1&ndash;插件已经安装完成</h4>

<p>1、打开xcode插件所在的目录：~/Library/Application Support/Developer/Shared/Xcode/Plug-ins；</p>

<p>2、选择已经安装的插件例如VVDocumenter-Xcode，右键”显示包内容”；</p>

<p>3、找到info.plist 文件，找到DVTPlugInCompatibilityUUIDs的项目，添加一个Item，Value的值为之前Xcode的UUID，保存。</p>

<p><img src="http://images.90159.com/11/vvdocumenter4.jpg" alt="VVDocumenter1" /></p>

<h4>方式2&ndash;插件还未安装/重新安装</h4>

<p>1、从GitHub克隆仓库到本地，在Xcode中打开项目，选择项目名称，在TAGETS下选中VVDocumenter-Xcode；</p>

<p>2、选择Info，找到DVTPlugInCompatibilityUUIDs的项目，添加一个Item，Value的值为之前Xcode的UUID；</p>

<p>3、Build项目，VVDocumenter-Xcode会自动安装。</p>

<h3>三、重启Xcode</h3>

<p>Xcode 6之后，重启Xcode时会提示“Load bundle”、 “Skip Bundle”，这里必须选择“Load bundle”，不然插件无法使用。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS开发之如何跳到系统设置里的各种设置界面]]></title>
    <link href="http://www.superqq.com/blog/2015/12/01/jump-setting-per-page/"/>
    <updated>2015-12-01T22:12:54+08:00</updated>
    <id>http://www.superqq.com/blog/2015/12/01/jump-setting-per-page</id>
    <content type="html"><![CDATA[<p>昨天的文章<a href="http://www.superqq.com/blog/2015/11/30/jump-to-setting-wifi/">《iOS开发之如何跳到系统设置里的WiFi界面》</a>介绍了如何从APP里跳到WiFi设置界面，很多朋友非常喜欢这样的小功能，还有朋友正想做这个功能刚好看见啦！</p>

<h2>跳到更多设置界面</h2>

<p>除了跳到WiFi设置界面，能不能跳到其他的设置界面呢？比如：定位服务、FaceTime、音乐等等。都是可以的，一起来看看如何实现的！</p>

<!--more-->


<h2>定位服务</h2>

<p>定位服务有很多APP都有，如果用户关闭了定位，那么，我们在APP里面可以提示用户打开定位服务。点击到设置界面设置，直接跳到定位服务设置界面。代码如下：</p>

<pre><code>//定位服务设置界面
NSURL *url = [NSURL URLWithString:@"prefs:root=LOCATION_SERVICES"];
if ([[UIApplication sharedApplication] canOpenURL:url])
{
    [[UIApplication sharedApplication] openURL:url];
}
</code></pre>

<p>这样就可以跳到系统设置的定位服务界面啦！我们继续看几个列子。</p>

<h2>FaceTime</h2>

<pre><code>//FaceTime设置界面
NSURL *url = [NSURL URLWithString:@"prefs:root=FACETIME"];
if ([[UIApplication sharedApplication] canOpenURL:url])
{
    [[UIApplication sharedApplication] openURL:url];
}
</code></pre>

<h2>音乐</h2>

<pre><code>//音乐设置界面
NSURL *url = [NSURL URLWithString:@"prefs:root=MUSIC"];
if ([[UIApplication sharedApplication] canOpenURL:url])
{
    [[UIApplication sharedApplication] openURL:url];
}
</code></pre>

<h2>墙纸设置界面</h2>

<pre><code>//墙纸设置界面
NSURL *url = [NSURL URLWithString:@"prefs:root=Wallpaper"];
if ([[UIApplication sharedApplication] canOpenURL:url])
{
    [[UIApplication sharedApplication] openURL:url];
}
</code></pre>

<h2>蓝牙设置界面</h2>

<pre><code>//蓝牙设置界面
NSURL *url = [NSURL URLWithString:@"prefs:root=Bluetooth"];
if ([[UIApplication sharedApplication] canOpenURL:url])
{
   [[UIApplication sharedApplication] openURL:url];
}
</code></pre>

<h2>iCloud设置界面</h2>

<pre><code>//iCloud设置界面
NSURL *url = [NSURL URLWithString:@"prefs:root=CASTLE"];
if ([[UIApplication sharedApplication] canOpenURL:url]
{
   [[UIApplication sharedApplication] openURL:url];
}
</code></pre>

<h2>参数配置</h2>

<p>看到这几个例子，大家有没有发现，想跳到哪个设置界面只需要prefs:root=后面的值即可！是的，就是这样的。</p>

<p>我在网上找到一个列表，可以跳到这些界面的参数配置：</p>

<pre><code>About — prefs:root=General&amp;path=About
Accessibility — prefs:root=General&amp;path=ACCESSIBILITY
Airplane Mode On — prefs:root=AIRPLANE_MODE
Auto-Lock — prefs:root=General&amp;path=AUTOLOCK
Brightness — prefs:root=Brightness
Bluetooth — prefs:root=General&amp;path=Bluetooth
Date &amp; Time — prefs:root=General&amp;path=DATE_AND_TIME
FaceTime — prefs:root=FACETIME
General — prefs:root=General
Keyboard — prefs:root=General&amp;path=Keyboard
iCloud — prefs:root=CASTLE
iCloud Storage &amp; Backup — prefs:root=CASTLE&amp;path=STORAGE_AND_BACKUP
International — prefs:root=General&amp;path=INTERNATIONAL
Location Services — prefs:root=LOCATION_SERVICES
Music — prefs:root=MUSIC
Music Equalizer — prefs:root=MUSIC&amp;path=EQ
Music Volume Limit — prefs:root=MUSIC&amp;path=VolumeLimit
Network — prefs:root=General&amp;path=Network
Nike + iPod — prefs:root=NIKE_PLUS_IPOD
Notes — prefs:root=NOTES
Notification — prefs:root=NOTIFICATIONS_ID
Phone — prefs:root=Phone
Photos — prefs:root=Photos
Profile — prefs:root=General&amp;path=ManagedConfigurationList
Reset — prefs:root=General&amp;path=Reset
Safari — prefs:root=Safari
Siri — prefs:root=General&amp;path=Assistant
Sounds — prefs:root=Sounds
Software Update — prefs:root=General&amp;path=SOFTWARE_UPDATE_LINK
Store — prefs:root=STORE
Twitter — prefs:root=TWITTER
Usage — prefs:root=General&amp;path=USAGE
VPN — prefs:root=General&amp;path=Network/VPN
Wallpaper — prefs:root=Wallpaper
Wi-Fi — prefs:root=WIFI
</code></pre>

<p>大家可以根据自己的需求，跳到不同的设置界面。如果你喜欢这篇文章的话，欢迎分享给更多的朋友，也可以收藏起来，以备不时之需！</p>

<p><a href="https://github.com/worldligang/iOSStrongDemo">iOSStrongDemo</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS开发之如何跳到系统设置里的WiFi界面]]></title>
    <link href="http://www.superqq.com/blog/2015/11/30/jump-to-setting-wifi/"/>
    <updated>2015-11-30T22:14:58+08:00</updated>
    <id>http://www.superqq.com/blog/2015/11/30/jump-to-setting-wifi</id>
    <content type="html"><![CDATA[<p>之前以为，苹果不支持直接从应用跳到系统设置里的WiFi界面。后来发现，这个小功能是可以实现的，而且实现起来并不麻烦。让我们一起来看看吧！</p>

<h2>需求</h2>

<p>从应用跳到系统设置里的WiFi界面有这个需求存在吗？答案是肯定的。比如以下两个例子：</p>

<p>在没有网的状态下，你可能想提醒用户去设置界面连接WiFi。如果不能跳到WiFi界面，只能在APP里面做出文字提示。这样很多小白用户可能不会看提示，只会觉得APP没有做好。</p>

<p>还有一种情况，做智能家居的APP，智能硬件设备自带WiFi（局域网）。如果用户没有连接设备的WiFi进入APP时，需要提示用户去设置界面连接WiFi。</p>

<p>以上这两种情况只是举个例子，这个小功能的用处还是很多的，大家可以自行探索。</p>

<!--more-->


<h2>实现</h2>

<h3>info里面设置</h3>

<p>在项目中的info.plist中添加 URL types 并设置一项URL Schemes为prefs，如下图：</p>

<p><img src="http://images.90159.com/12/wifi1.png" alt="wifi1" /></p>

<h3>实现代码</h3>

<pre><code>NSURL *url = [NSURL URLWithString:@"prefs:root=WIFI"];
if ([[UIApplication sharedApplication] canOpenURL:url])
{
    [[UIApplication sharedApplication] openURL:url];
}
</code></pre>

<h2>代码已上传iOSStrongDemo</h2>

<p>代码已经push到<a href="https://github.com/worldligang/iOSStrongDemo">iOSStrongDemo</a>，大家可以clone下来测试一下。</p>

<p>我在这里抛砖迎玉，大家还想跳到系统设置的什么界面，可以评论留言告诉我，或者大家动手来实现更多的跳转功能！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一组功能丰富的iOS组件:YYKit]]></title>
    <link href="http://www.superqq.com/blog/2015/11/27/ios-rich-components-yykit/"/>
    <updated>2015-11-27T23:27:37+08:00</updated>
    <id>http://www.superqq.com/blog/2015/11/27/ios-rich-components-yykit</id>
    <content type="html"><![CDATA[<p>项目地址：<a href="https://github.com/ibireme/YYKit">https://github.com/ibireme/YYKit</a></p>

<h1>中文介绍</h1>

<p>YYKit 是一组庞大、功能丰富的 iOS 组件。</p>

<p>为了尽量复用代码，这个项目中的某些组件之间有比较强的依赖关系。为了方便其他开发者使用，我从中拆分出以下独立组件：</p>

<ul>
<li><a href="https://github.com/ibireme/YYModel">YYModel</a> — 高性能的 iOS JSON 模型框架。</li>
<li><a href="https://github.com/ibireme/YYCache">YYCache</a> — 高性能的 iOS 缓存框架。</li>
<li><a href="https://github.com/ibireme/YYImage">YYImage</a> — 功能强大的 iOS 图像框架。</li>
<li><a href="https://github.com/ibireme/YYWebImage">YYWebImage</a> — 高性能的 iOS 异步图像加载框架。</li>
<li><a href="https://github.com/ibireme/YYText">YYText</a> — 功能强大的 iOS 富文本框架。</li>
<li></li>
<li><a href="https://github.com/ibireme/YYKeyboardManager">YYKeyboardManager</a> — iOS 键盘监听管理工具。</li>
<li><a href="https://github.com/ibireme/YYDispatchQueuePool">YYDispatchQueuePool</a> — iOS 全局并发队列管理工具。</li>
<li><a href="https://github.com/ibireme/YYAsyncLayer">YYAsyncLayer</a> — iOS 异步绘制与显示的工具。</li>
<li><a href="https://github.com/ibireme/YYCategories">YYCategories</a> — 功能丰富的 Category 类型工具库。</li>
</ul>


<!--more-->


<h1>演示项目</h1>

<p>查看并运行 <code>Demo/YYKitDemo.xcodeproj</code></p>

<p><img src="https://raw.github.com/ibireme/YYKit/master/Demo/Snapshots/twitter.png" width="320"><br/>
<img src="https://raw.github.com/ibireme/YYKit/master/Demo/Snapshots/weibo.png" width="320"> <img src="https://raw.github.com/ibireme/YYKit/master/Demo/Snapshots/weibo_compose.png" width="320"></p>

<h1>安装</h1>

<h3>CocoaPods</h3>

<ol>
<li>在 Podfile 中添加  <code>pod "YYKit"</code>。</li>
<li>执行 <code>pod install</code> 或 <code>pod update</code>。</li>
<li>导入 \&lt;YYKit/YYKit.h>。</li>
</ol>


<h3>Carthage</h3>

<ol>
<li>在 Cartfile 中添加 <code>github "ibireme/YYKit"</code>。</li>
<li>执行 <code>carthage update --platform ios</code> 并将生成的 framework 添加到你的工程。</li>
<li>导入 \&lt;YYKit/YYKit.h>。</li>
<li>注意: carthage framework 并没有包含 webp 组件。如果你需要支持 webp，可以用 CocoaPods 安装，或者手动安装。</li>
</ol>


<h3>手动安装</h3>

<ol>
<li>下载 YYKit 文件夹内的所有内容。</li>
<li>将 YYKit 内的源文件添加(拖放)到你的工程。</li>
<li>为 <code>NSObject+YYAddForARC.m</code> 和 <code>NSThread+YYAdd.m</code> 添加编译参数 <code>-fno-objc-arc</code>。</li>
<li>链接以下 frameworks:

<ul>
<li>UIKit</li>
<li>CoreFoundation</li>
<li>CoreText</li>
<li>CoreGraphics</li>
<li>CoreImage</li>
<li>QuartzCore</li>
<li>ImageIO</li>
<li>AssetsLibrary</li>
<li>Accelerate</li>
<li>MobileCoreServices</li>
<li>SystemConfiguration</li>
<li>sqlite3</li>
<li>libz</li>
</ul>
</li>
<li>如果你需要支持 WebP，可以将 <code>Vendor/WebP.framework</code>(静态库) 加入你的工程。</li>
<li>导入 <code>YYKit.h</code>。</li>
</ol>


<h1>文档</h1>

<p>你可以在 <a href="http://cocoadocs.org/docsets/YYKit/">CocoaDocs</a> 查看在线 API 文档，也可以用 <a href="https://github.com/tomaz/appledoc">appledoc</a> 本地生成文档。</p>

<h1>系统要求</h1>

<p>该项目最低支持 iOS 6.0。</p>

<h1>关于</h1>

<p>我希望调用 API 时，有着和调用系统自带 API 一样的体验，所以我并没有为 Category 方法添加前缀。我已经用工具扫描过这个项目中的 API，确保没有对系统 API 产生影响。我知道没有前缀的 Category 可能会带来麻烦，所以如果你只需要其中部分功能，请先查看上面那些拆分出来的子项目。</p>

<h1>许可证</h1>

<p>YYKit 使用 MIT 许可证，详情见 LICENSE 文件。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[打造高效率iOS开发实战交流VIP群]]></title>
    <link href="http://www.superqq.com/blog/2015/11/19/create-high-efficiency-ios-group/"/>
    <updated>2015-11-19T00:45:08+08:00</updated>
    <id>http://www.superqq.com/blog/2015/11/19/create-high-efficiency-ios-group</id>
    <content type="html"><![CDATA[<p>大家好，我是李刚。对的，你没有听错，我就是传说中李刚的本人。今天，我决定正式启动iOS开发实战交流VIP付费群！</p>

<h2>定位</h2>

<p>做什么事情都应该有一个明确的定位，无论是现在工作也好，还是以后创业也罢，定位非常重要。当然，这个iOS开发实战交流VIP群也有一个定位，那就是为广大iOS开发爱好者、iOS开发初学者提供一个技术交流平台，一起提升iOS开发技术。</p>

<p>具体来说：</p>

<ol>
<li>技术交流，不定期邀请一些技术牛人，分享开发经验。</li>
<li>技术问答，有关技术问题大家可以相互帮助回答，我也会邀请一些开发经验在3年以上的朋友，免费为大家解答技术问题。 （我也会参与回答）</li>
<li>我会把大家问的比较好的问题，整理成文档，共享给大家。算是对技术知识点的一个总结。</li>
<li>还能交一帮愿意为价值付费的朋友，以后可以资源共享，相互帮助。</li>
<li>群内不定期免费共享优秀的iOS开发视频教程，项目源码以及一些开发文档。</li>
</ol>


<!--more-->


<h2>为什么要建立付费群？</h2>

<p>我是公众号iOS开发：iOSDevTip 的小编，同时，我也是一名iOS开发者。在做iOS开发初期，我也加入了一些iOS开发的交流群，但是效果跟大家预想的一样，提问题很少有人回答。我也尝试过去一些网站提问题，但是效果也不好，很久才会有人回答，或者干脆没人回答。</p>

<p>后来，我也尝试建立免费的iOS开发交流群，试图为大家搭建一个学习交流的平台。大概有十几个群，加起来也有几千人了。但是，后来我都屏蔽了。为什么呢？因为这是一个免费的群，谁都可以进来，最后不得不变成了一个广告群，最后成为一个死群。</p>

<p>所以，这一次我要建立一个收费群，相当于增加了一个小小的门槛，这样想发广告的人就会被阻挡在外面了。</p>

<h2>哪些人可以进来？</h2>

<p>因为这是一个iOS开发技术交流群，所以主要面向两大群体。第一种是正在学习iOS开发（无论你是在培训还是自学）朋友，你在学习iOS开发的时候，遇到不懂的问题，可以通过此群来解决。第二种是刚入行不久的iOS开发者，在平时开发过程中遇到一些没有接触过的点，比如说真机调试证书、推送、AppStore上架等等，可以加入本群，一起交流成长。</p>

<p>很简单，遇到技术问题。你是愿意自己花几天的时间来琢磨，还是愿意加入iOS开发实战交流VIP群听取前人的经验？自己琢磨，不一定琢磨的出来。很多想学习iOS开发的朋友，就是因为遇到各种各样的问题，不能得到很好地解决，最后放弃了iOS开发这个行业。</p>

<p>编程最重要的就是思想，如果你一直写代码不思考很难有所进步，干一年之后发现没什么太大的变化，那就真的只是一个搬砖的。如果一群人在一起交流，相互分享经验，技术必然会得到提高，很多问题就会迎刃而解。</p>

<blockquote><p>定价：150元/年（2015/11/16——2016/11/15）</p></blockquote>

<h2>为什么是这个价位？</h2>

<p>第一，这是一个iOS开发技术交流群，帮助大家提升iOS开发技术以及解决开发过程中遇到的问题。</p>

<p>第二，我想做这个群的时候，我也咨询了好几位朋友。他们都说这个价位太低了，每天还不到5毛钱。回答技术问题是非常浪费时间的。但是我不这么认为，费用只是一个门槛，打造一个高效率的实战交流群才是真正的目标。所以综合考虑，我选择了150元。</p>

<p>第三，建立这个群并不是以盈利为目的的，更多的是想跟大家一起交流技术，解决问题。我在开发过程中也会遇到一些问题，可以跟大家一起交流分享，也提升自己的技术。这也是我选择这个价格的一些原因。</p>

<p>第四，这两天我也做了一个调查，有17%的童鞋愿意付费500-1000加入VIP群。但大多数童鞋还是希望价格在100左右。</p>

<p>基本也就这么多原因吧，所以定了这个价格。如果还有不明白的地方，欢迎留言提问。</p>

<blockquote><p>支付方式：微信（私人号：chinaligang）转账或者支付宝1606535851@qq.com</p></blockquote>

<p>支付完成之后，请加我微信（私人号：chinaligang）告知，确定成功之后，我会拉你进群。</p>

<p>来吧，愿大家除了思维上、技术上有所提高，更能成为网络上无话不谈的知心朋友！</p>

<p>也希望所有有缘能相聚于此群中的朋友，不仅仅把此群当成一个社群，而需要当成一个家！一起成长，一起进步！</p>

<p>注：群里除了会分享一些技术上的经验，有关iOS开发最新的视频教程也都会先在群里进行分享。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS提交审核：您的 App 正在使用广告标识符 (IDFA)]]></title>
    <link href="http://www.superqq.com/blog/2015/11/13/ios-submit-using-idfa/"/>
    <updated>2015-11-13T10:34:12+08:00</updated>
    <id>http://www.superqq.com/blog/2015/11/13/ios-submit-using-idfa</id>
    <content type="html"><![CDATA[<p>提交审核也是iOS开发者必备技能之一。关于提交审核的教程数不胜数，不会的童鞋赶紧尝试一下吧！</p>

<p>这篇文章我们来解决一个问题，关于IDFA的：</p>

<pre><code>您的 App 正在使用广告标识符 (IDFA)。您必须先提供关于 IDFA 的使用信息或将其从 App 中移除，然后再上传您的二进制文件。
</code></pre>

<p>从14年2月初开始，Apple开始拒绝采集IDFA(identifier for advertising)而未集成任何广告服务的应用进入AppStore。怎么看自己的项目是否采集了IDFA呢？方法很简单，大家去看framework，看看有没有一个framework叫AdSupport.framework。</p>

<p>如果有，那就惨了，上两张图看看：</p>

<p><img src="http://images.90159.com/11/idfa1.png" alt="idfa1" /></p>

<!--more-->


<p>如果你选择了“否”：</p>

<p><img src="http://images.90159.com/11/idfa2.png" alt="idfa2" /></p>

<h2>方案一：重新下载xcode</h2>

<ol>
<li>如果你的xcode不是最新版本的，建议下载最新版本的。重新打包后，再次提交审核。</li>
<li>如果你的xcode不是正规渠道下载的，建议从苹果官方下载。</li>
</ol>


<p>有朋友尝试过方案一，问题得到解决。如果解决不了，还有方案二。</p>

<h2>方案二：检测哪里用到IDFA</h2>

<p>首先cd到你的工程目录下，然后执行命令：</p>

<pre><code>grep -r advertisingIdentifier .
</code></pre>

<p>果然找到了罪魁祸首，原来是SinaWeiboSDK/libWeiboSDK.a</p>

<p><img src="http://images.90159.com/11/idfa3.png" alt="idfa3" /></p>

<p>ios9之后新浪微博分享可使用的前提是加入ADSupport.framework,打包提交后一直报您的 App 正在使用广告标识符 (IDFA)。您必须先提供关于 IDFA 的使用信息或将其从app中移除，再上传二进制文件。</p>

<p>找到了源头，那么接下来怎么做就简单了。</p>

<ol>
<li>承认使用了IDFA，然后选择相应的选项。</li>
<li>移除SinaWeiboSDK/libWeiboSDK.a，分享还是可以成功的。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[远程推送控制台提示Add “Remote-notification”...解决方案]]></title>
    <link href="http://www.superqq.com/blog/2015/11/12/remote-notification-error/"/>
    <updated>2015-11-12T18:21:17+08:00</updated>
    <id>http://www.superqq.com/blog/2015/11/12/remote-notification-error</id>
    <content type="html"><![CDATA[<p>做推送的童鞋可能会遇到这样的问题，控制台会打印一句话：</p>

<p>You&rsquo;ve implemented -[<UIApplicationDelegate> application:didReceiveRemoteNotification:fetchCompletionHandler:], but you still need to add &ldquo;remote-notification&rdquo; to the list of your supported UIBackgroundModes in your Info.plist.</p>

<p>解决办法：</p>

<p><img src="http://images.90159.com/11/error1.png" alt="error1" /></p>

<!--more-->


<p>这个时候再去看看Info.plist文件：</p>

<p><img src="http://images.90159.com/11/error2.png" alt="error2" /></p>

<p>再次运行，问题就解决啦！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[月薪3万的程序员都避开了哪些坑]]></title>
    <link href="http://www.superqq.com/blog/2015/11/02/salary-programmer-avoid-pit/"/>
    <updated>2015-11-02T09:58:49+08:00</updated>
    <id>http://www.superqq.com/blog/2015/11/02/salary-programmer-avoid-pit</id>
    <content type="html"><![CDATA[<p>程序员薪水有高有低，有的人一个月可能拿30K、50K，有的人可能只有2K、3K。同样有五年工作经验的程序员，可能一个人每月拿20K，一个拿5K。是什么因素导致了这种差异？我特意总结了容易导致薪水低的九大行为表现，避开这些大坑，你就离高薪不远了。</p>

<h3>习惯即刻回报</h3>

<p>他不懂得只有春天播种，秋天才会有收获。刚刚付出一点点，甚至还没有付出，就想要得到回报。技术刚刚掌握，能一边百度一边干活了就觉得该拿到多少多少钱了。找工作先想着多少多少钱，入职了没干几个月就想着要加多少多少钱，干了没几个月，薪水要是没涨，就放弃了，准备通过跳槽加薪，不跳槽的话，往往也会因为没加薪而牢骚满腹，工作敷衍了事。</p>

<p>一个程序员的价值，是通过他带给公司的价值体现的。先给公司带来了价值，然后才会反过来在薪水上体现出自己的价值。公司都很现实，很少会为你的潜力买单，在你还没有体现出价值时就给你很高的薪水。</p>

<p>在生活和工作中，一定要懂得付出，不要那么急功近利，马上想得到回报。天下没有白吃的午餐，你想获得什么，就得先付出什么。唯有种下种子，然后浇水、施肥、除草、杀虫，然后才能等来收获。</p>

<!--more-->


<h3>缺乏学习热情</h3>

<p>很少有哪个岗位的人像程序员这样需要持续不断的学习，软件开发的技术日新月异，而每一项技术又往往博大精深，不持续、深入钻研是很难掌握的，更别谈精通了。如果你对一项技术不能深刻理解熟练应用，表现出来的水准仅仅是能干活、还行，那很难说会有公司愿意为“还行”付出大的代价，只有脱颖而出，才可能备受重视。</p>

<p>假如你对学习、掌握、精通技术没有兴趣，面对不断涌现的新语言新技术新框架没有学习欲望，那但就软件开发这个工作而言，你不但眼下不太可能拿到高薪，将来也不会。在这样一个快速变化的时代，只有不断地学习才不会被抛弃。</p>

<h3>不够努力</h3>

<p>虽然我们都知道努力学习可以改变我们的技能水平，持续努力不懈坚持可以让自己有所建树，可还是有很多人浅尝辄止，三天打鱼两天晒网，搞两下能Run就放下了。</p>

<p>人和人在聪明才智上的差距并没有想象中大，甚至很多时候，从大多数人的努力程度之低来看，根本还轮不到拼天赋。如果两个人的实力半斤八两的话，热情工作努力坚持的人，一定比较容易成功。</p>

<h3>畏难</h3>

<p>做事拈轻怕重，不愿挑战。殊不知能力就是在不断挑战不断突破自己的过程中历练出来的。在一个公司里面，经常承担高难度任务的程序员，一定是成长比较快的，薪水增长也一定是比较快的。越是困难的事情，越能体现出个人价值，也越能带给个人成长。</p>

<p>万事起头难，不要害怕困难。事情做不好往往不是因为没有能力，大都是由于缺乏恒心。只要不怕困难，坚持前行，一定会有不一样的收获。</p>

<p>事业就像女人，谁去追求，谁就能得手。金钱也一样。</p>

<h3>缺乏责任心</h3>

<p>工作上不管什么事儿，反正不是自己的事儿，缺乏责任心，干好干不好都无所谓，对交付承诺、对产品质量都不在意，没什么事儿能让他上心。</p>

<p>一个人的责任心如何，决定着他在工作中的态度，决定着其事业的好坏和成败。如果一个人没有责任心，即使他有再大的能耐，也不一定能做出好的成绩来。</p>

<h3>消极，抱怨</h3>

<p>工作稍有不顺，就怨气沸腾，这个怎么怎么样，那个怎么怎么样，而我怎么就这样，任务不公平，资源不公平，那谁谁不支持我，那谁谁不配合……</p>

<p>抱怨不能使事情变好，反之，它会让负面情绪蔓延，蚕食你的精力和时间，让你产出更低。成功者永不抱怨，抱怨者永不成功。立刻停止抱怨，早一分钟停止，你就离目标近一分钟。</p>

<h3>没有时间管理观念</h3>

<p>每个人的一天都只有24小时，人和人的差别就在于如何利用时间上。</p>

<p>有的人每周都有目标，每天都有计划，早上起来会想今天要做的几件重要的事，晚上会回顾今天完成的事，总结干成了什么干坏了什么，还会有计划的学习新知识新技能，这样日积月累不断坚持，每一天都是高效的，每一天都朝着更丰富更完美的自己前进。</p>

<p>而有的人则漫无目的，走哪算哪，到了公司，上午基本做不成事儿，到下午了还不知道要做什么，晚上也发愁如何消磨时间……</p>

<h3>为薪水工作</h3>

<p>虽然工作的一大目的是获取薪水，养活自己以及供给家庭所需；但是，这只是工作最直接的报偿，同时也是最低级的目标。</p>

<p>如果我们为薪水而工作，将注定我们是短视的，也将注定受到最深的伤害。假如你看不到工资以外的东西，斤斤计较于薪水、福利、职位等，那外界的些微风吹草动就可能让你像浮萍一样飘来荡去，你很快就会失去平衡，失去信心，失去热情，失去平和，进而在工作时总是采取一种应付了事的态度，能少做就少做，能躲避就躲避，觉得只要对得起自己的那份薪水就成了。长此以往，你追求的高薪水反倒得不到。</p>

<p>我们进入一个公司工作，是为了自己，不是薪水也不是别人，比薪水更重要的，是成长和成就自己的机会。我们一定要明白，公司、企业、组织，都是我们锻炼自己、修炼自我的平台，我们不是为薪水工作、不是为老板工作、不是为家人工作，是为实现自我而工作，是为更完美的自己而工作。</p>

<p>唯有志存高远，方能风行天下。</p>

<h3>其实不喜欢软件开发</h3>

<p>有一部分人从事软件开发工作，并不是因为喜欢，也没有干着干着从不喜欢变成喜欢。他们可能是喜欢软件开发附带的高薪水——平均薪水比其他行业高。人做一件自己不喜欢的事情时，心理上没有亲近感，不会想着怎样把事情做得更好，往往是差不多就成了，不太可能有精益求精积极向上的追求。因为在做不喜欢的事情时，情感上是拒绝的，情绪上是想逃离的，总想着早点儿完事儿拉倒，每一天去单位时不是充满期待，而是各种担忧、烦躁、畏惧，到了单位，稍有困难或不顺心，就会消极、抱怨、抵触、拒绝……</p>

<p>做喜欢的事，能最大可能发挥一个人的潜能和热情，会最快速地通向成功成就自己。而做不喜欢的事，一开始就注定了事倍功半，最后也往往会是痛苦不堪或半途而废。</p>

<blockquote><p>来自：foruok 地址：<a href="http://blog.csdn.net/foruok/article/details/49245349">http://blog.csdn.net/foruok/article/details/49245349</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[程序猿的幽默趣图，你并不懂他们的真正世界]]></title>
    <link href="http://www.superqq.com/blog/2015/11/01/humor-code-world/"/>
    <updated>2015-11-01T13:22:00+08:00</updated>
    <id>http://www.superqq.com/blog/2015/11/01/humor-code-world</id>
    <content type="html"><![CDATA[<blockquote><p>作为程序员 ，你不能错过的幽默！</p></blockquote>

<h3>1、旁人眼中的程序猿和真实世界的程序猿。</h3>

<p><img src="http://images.90159.com/11/humor1.gif" alt="humor1" /></p>

<h3>2、多线程的理论和现实。</h3>

<p><img src="http://images.90159.com/11/humor2.jpg" alt="humor2" /></p>

<h3>3、你是这样的还是那样的BUG？</h3>

<p><img src="http://images.90159.com/11/humor3.gif" alt="humor3" /></p>

<h3>4、我想重构，但又怕重构后，从此程序就不能再正常&hellip;&hellip;..</h3>

<p><img src="http://images.90159.com/11/humor4.jpg" alt="humor4" /></p>

<h3>5、客户的期望VS最终产品</h3>

<p><img src="http://images.90159.com/11/humor5.gif" alt="humor5" /></p>

<p>来自：网络</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为自己的应用配备上 3D Touch 功能]]></title>
    <link href="http://www.superqq.com/blog/2015/10/31/app-touch-3d-function/"/>
    <updated>2015-10-31T10:35:24+08:00</updated>
    <id>http://www.superqq.com/blog/2015/10/31/app-touch-3d-function</id>
    <content type="html"><![CDATA[<p>随着 iPhone 6s 以及 iPhone 6s Plus 的发布，开发者们现在就可以为自己的应用配备上 3D Touch 功能了，从而给界面交互方式开启一个新的维度。</p>

<p>正如苹果所言，开发者可以通过非常简单的 API 来使用 3D Touch ，从根本上来说，也就是 UITouch 的一个简单的新属性。</p>

<pre><code>override func touchesBegan(touches: Set&lt;UITouch&gt;, withEvent event: UIEvent?) {
     guard let touch = touches.first else { return }
     if traitCollection.forceTouchCapability == .Available {
        println("Touch pressure is \(touch.force), maximum possible force is \(touch.maximumPossibleForce)")
     }
}
</code></pre>

<p>这个新的 API 可以让应用发挥出巨大的潜力，比如说游戏中的额外控制选项、绘图应用中的细粒度(fine-grained)控制，甚至是用来替代我们在 iOS 设备中使用过的长按操作(tap-and-hold)的极佳选择。</p>

<p>除了 UITouch 中新增的 API 外，苹果还为应用提供了两个用来增加3D Touch 功能的类集：UIPreviewAction 和 UIApplicationShortcutItem。</p>

<p>UIPreviewAction允许开发者在用户使用 3D Touch 功能触控一个 UI 元素的时候，快速地在一个新的预览窗口中显示某些内容。这种快速浏览应用特定内容的方式真的非常棒，比如说我们可以快速预览邮件信息、照片，甚至是网页内容，而无需弹出一个完整的视图控制器。</p>

<p>UIApplicationShortcutItem对象能够让 iOS 主屏幕激活一项令人惊叹的新特性。当用户使用 3D Touch 按下某个应用的图标时，一个选项列表就会被弹出，允许用户快速跳转至应用的特定部分，或者执行某项应用内的功能。</p>

<p><img src="http://images.90159.com/10/touch.jpg" alt="touch" /></p>

<p>总而言之，3D Touch 的引入给 iOS 设备解锁了一个全新的交互方式，并且将会给接下来的 iOS 应用带来新一代的创新。关于3D Touch 的实例代码和相关信息可以在苹果开发者网站的3D Touch网页上找到，祝你好运！</p>

<p>作者：Tim Oliver
@TimOliverAU — iComics创始人</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[两个非常不错的自定义UIAlertView第三方类库]]></title>
    <link href="http://www.superqq.com/blog/2015/10/30/two-nice-uialertview/"/>
    <updated>2015-10-30T10:08:00+08:00</updated>
    <id>http://www.superqq.com/blog/2015/10/30/two-nice-uialertview</id>
    <content type="html"><![CDATA[<p>UIAlertView大家都不陌生了。UIAlertView不可以添加控件，比如说：UILabel、UITextView等等，所以遇到这个需求，一般都要自定义UIAlertView来解决。</p>

<p>我再github上找到了两个非常错的自定义UIAlertView第三方类库，分别是：LMAlertView和CustomIOSAlertView。</p>

<h2>LMAlertView使用简介</h2>

<p><a href="https://github.com/lmcd/LMAlertView">LMAlertView</a>在github上有610个star。说明这个第三方的UIAlertView还不错，我大概看了一下用法也比较简单。</p>

<p>来看看两个个案例效果：</p>

<p><img src="https://camo.githubusercontent.com/eb9242282b703a847c5ca45ef47462ec507ba573/687474703a2f2f6c6d63642e6d652f4c4d416c657274566965772d637573746f6d4032782e706e67" alt="1" /></p>

<!--more-->


<p><img src="https://camo.githubusercontent.com/b1c95e3be84a8d277e1c542ca768b3bdebe043a6/687474703a2f2f6c6d63642e6d652f4c4d416c657274566965772d7265766965774032782e706e673f33" alt="2" /></p>

<h3>用CocoaPods安装LMAlertView</h3>

<pre><code>pod 'LMAlertView'
</code></pre>

<h3>使用案例</h3>

<pre><code>LMAlertView *alertView = [[LMAlertView alloc] initWithTitle:@"iOSDevTip"
                                        message:@"关注一下"
                                       delegate:nil
                              cancelButtonTitle:@"ok"
                              otherButtonTitles:nil];

// Add your subviews here to customise
UIView *contentView = alertView.contentView;

[alertView show];   
</code></pre>

<p>LMAlertView还保持着UIAlertView的创建方法，作者还比较用心。</p>

<h2>CustomIOSAlertView使用简介</h2>

<p><a href="https://github.com/wimagguc/ios-custom-alertview">CustomIOSAlertView</a>比LMAlertView的star还多一些，有861个。同样我们先看一下效果：</p>

<p><img src="https://github.com/wimagguc/ios-custom-alertview/raw/master/Docs/screen.png" alt="3" /></p>

<h3>用CocoaPods安装CustomIOSAlertView</h3>

<pre><code>pod 'CustomIOSAlertView', '~&gt; 0.9.3'
</code></pre>

<h3>使用案例</h3>

<pre><code>CustomIOSAlertView *alertView = [[CustomIOSAlertView alloc] init];  UIView *customView ..;

[alertView setContainerView:customView];
[alertView show];
</code></pre>

<p>CustomIOSAlertView可以设置代理，还可以通过block来实现按钮的点击事件。功能相对比较齐全。</p>

<p>喜欢的童鞋可以star一下，以备不时之需。如果你觉得不错，记得分享给更多朋友哈，谢谢！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一次皆大欢喜的程序员跳槽加薪]]></title>
    <link href="http://www.superqq.com/blog/2015/10/29/programmer-job-raise/"/>
    <updated>2015-10-29T10:49:15+08:00</updated>
    <id>http://www.superqq.com/blog/2015/10/29/programmer-job-raise</id>
    <content type="html"><![CDATA[<p>我的朋友A君是个典型的.NET开发人员，技术不错，人品也不错，在一家小公司（姑且称为甲公司）做项目开发，是技术骨干。</p>

<p>3个月前，他找到我说想跳槽，让我帮忙介绍工作。我说为什么想跳了？</p>

<h2>1.为什么想离职？</h2>

<p>他简单说了一下他在甲公司当时的状况：A君在甲公司做了两年多，这两年多完成了一个大项目，作为开发的核心主力，开发压力很大，特别是项目上线前的几个月是非常辛苦，几乎每晚都要加班到12点以后，周末最多只有一天休息。在最困难的时候，老板给大家大气，“大家再坚持坚持，项目上线赚钱了，就给大家涨工资，公司是绝对不会亏待大家的”，在老板豪情壮语的加薪鼓励下，大家要紧牙关拼上了。终于，半年前，项目上线了，运行也慢慢稳定了，公司赚钱也多了起来。</p>

<p>是的，公司赚钱了，利润很可观，这是大家都知道的事情。但是，一两个月过去了，加薪的事情完全没影，老板就像从来没提过一样。于是，A君向人事经理说出了希望加薪的请求，最后，得到的回复（在小公司，这当然是老板的意思）：（1）A君目前的工资与外面相比，基本是持平的。（2）A君目前的工作很悠闲，工作量不饱和。</p>

<p>关于（1）实际上是个难题，两个人的工资要怎么比较，几乎都是老板一个非常主观的想法。而关于（2），却是事实：由于新的项目还在调研中，所以，A君的工作暂时就轻松了不少，主要就是维护线上的系统，加加小功能，修修小bug，比较清闲。</p>

<!--more-->


<h2>2.老板很有骨气</h2>

<p>A君听到回复后，很是生气，在和同事们一起吃饭时，就忍不住埋怨起公司来，后来，这话传到了老板的耳朵里，老板很有骨气：越是抱怨，越不给你涨工资，看你怎么样。</p>

<p>终于，A决定离职，老板一如既往的有骨气：离职就离职，离开你公司就得关门了？</p>

<p>所以，就回到了开头的一幕，3个月前，A要我帮忙介绍工作。我刚好想到之前另外一个乙公司的技术经理联系我说，他下面有个B君想离职，希望我推荐个人，事成之后有推荐费拿的。理所当然的，我把A推荐了到了乙公司，A接手了B君的工作（在接手的过程中，A和B还成为了好朋友），乙公司对A的表现非常满意，最后，A的工资相比在甲公司涨幅达到50%。</p>

<h2>3.对调一下吧</h2>

<p>事情还没完，A君从甲公司离职后，甲公司的线上系统的维护就成为一个大问题了，老板命令人事经理赶快找人来顶上，苦逼的人事经理在QQ里群发了招聘的信息，这个信息也发给了A君，于是，A君把正在找工作的B君推荐过去了。B君在甲公司工作一个月后就转正，老板也很满意，相比之前在乙公司工资上涨了30%，和现在A的工资差不多。</p>

<p>—— 后来，A告诉我，B之所以要离职，原因跟A是差不多的。</p>

<h2>4. 皆大欢喜</h2>

<p>这真是一个皆大欢喜的局面！</p>

<pre><code>A到乙公司接手了原来B的工作，工资涨了50%。

B到甲公司接手了原来A的工作，工资涨了30%。

更重要的是，甲、乙公司的老板都爽了，对新进来的员工的表现都非常满意。

而我，拿到了乙公司的推荐费。

A和B成为了好朋友，除了经常探讨技术外，还经常一起讨论这搞笑的离职加薪过程，交流心得。
</code></pre>

<p>最后，我想说，这不是编的，这是一个真实的故事，而且以后还会发生……</p>

<blockquote><p>出处： GG2014
网址：<a href="http://www.cnblogs.com/justnow/p/4903436.html">http://www.cnblogs.com/justnow/p/4903436.html</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[20年的老程序员对新入行的朋友的一些建议]]></title>
    <link href="http://www.superqq.com/blog/2015/10/28/20-years-programmers/"/>
    <updated>2015-10-28T13:09:57+08:00</updated>
    <id>http://www.superqq.com/blog/2015/10/28/20-years-programmers</id>
    <content type="html"><![CDATA[<p>从事编程这一行也已经20年了，到今天为止，有关编程方面的知识我也写了六七门课程了，教授课程的时间也已超过了1000小时，下面我所说的全部是我多年来的实践的经验之谈。</p>

<h2>◆编程真的不是一件容易的事</h2>

<p>不管你多喜欢或是多会编程，在学习和解决问题上总会碰到障碍。工作的时间越久就越能明白这个道理。不过这倒是一个让人进步的机会，因为你要一直不断的学习才能很好的解决你面前的难题。如果你已不有了进取心，那么当遇到难道无法解决时你就会想要放弃。</p>

<h2>◆编程也是最让人沮丧的事情</h2>

<p>正常的编程过程都是这样的：尝试、失败、学习、思考、灵感、成功。在这个漫长的过程中，常有人会感到沮丧也是很正常的事，如果最终成功了，那么接下来你会想挑战更难的项目，当然，之前的沮丧就会从新而来，又是一个从新学习的机会，在这个过程中，我们要懂得调整好心态，从新从发。</p>

<h2>◆办法总是要比困难多</h2>

<p>经过不断的学习，我们的编程技术会越来越强，对自己也会更加自信。每个人小时候都会有大大小小的闯祸经历，但随着我们的成长和能力的增强，我们很少再去办错事情了。而如今我们也有办法解决我们所犯的错。</p>

<!--more-->


<h2>◆编程就像魔法，而我们每个人都成为魔法师</h2>

<p>经过我们的努力，学习好编程的各种技能，当你做出来的各种编程代码，让别人操作起来轻而易举的就能得到他们想要的效果时，他们就会觉得我们像魔法师一样，因为我们所提供的这些功能可以让他们更轻松，他们也更需要我们的这种技能。</p>

<h2>◆要学会很好的利用网络资源</h2>

<p>当你刚开始学习编程时，如果遇到难道，你可以很好的利用网络来搜索你想要的东西，因为在你之前一定有很多人像你一样遇到过类似的问题，所以你一定要尽快的掌握如何有效的网上搜索技能，这样你会更快的得到有效学习。</p>

<h2>◆对于一个程序员来讲，工具箱一定是我们的好助手</h2>

<p>工具箱里的功能是程序员不可缺少的，这些工具将伴随我们每一天，随着我们经验的增长，我们还会学习到更高级的工具，有些工具虽然不是很常用，但他们更擅长解决一些特定的问题（例如，二叉树数据结构、A*、Valgrind、调试器等等）。大多数编程领域（游戏开发、Web开发、数据库）都有自己特有的一系列解决问题的模式。所以掌握的工具越多对你越有利。</p>

<h2>◆如果想更擅长编程，最好是阅读大量代码和亲自写大量的代码</h2>

<p>在这个行业里有成就的老程序员早已写下了很多可供我们参考的代码，所以，为什么不去多看看呢？当然，自己的实践也是不可缺少的，好好练习写代码吧，努力总是有收获的不是吗？</p>

<h2>◆不要满足于现状，因为你永远不会是最好的</h2>

<p>编程中的知识你永远都学不完，他就像一个大集会一样，总是有新的难道需要我们去解决。所以我们也应该要学习新的知识来解决面前的难题。只有你能做到这一点，你将永远不必担心自己的饭碗。</p>

<p>via：<a href="http://netsmell.com/post/what-i-tell-all-new-programmers.html">http://netsmell.com/post/what-i-tell-all-new-programmers.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从产品经理的角度算一算，做一个app需要花多少钱？]]></title>
    <link href="http://www.superqq.com/blog/2015/10/27/product-manager-calculate-app/"/>
    <updated>2015-10-27T14:41:46+08:00</updated>
    <id>http://www.superqq.com/blog/2015/10/27/product-manager-calculate-app</id>
    <content type="html"><![CDATA[<blockquote><p>作为互联网从业者，被外行的朋友们问及最多的问题是，“做一个网站需要多少钱？”或者“做一个APP需要多少钱？”。作为做过完整网站项目和APP的人，今天从产品经理的角度，一起来算一下中小型APP从无到有需要做哪些工作，以及为达成使命，需要付出多少金钱代价。</p></blockquote>

<p>以下内容的前提是：深圳、移动互联网方向。包含研发一个新产品过程中一些常见的工作，并非十全十美。</p>

<p>首先假设在做APP之前我们已经有了一个成熟的团队（这是非常幸运的前提，很多产品研发进度极其缓慢的原因之一就是在过程中不断在招人），团队的结构以架构师兼后台开发1名+安卓1名+iOS开发1名+产品经理1名+前端开发1名+设计师1名。你可能也发现了这些人员配备都是单点的，一旦有人生病或请假，某个职位就会缺失，项目进度就会拖后，所以我们大约配备2个浮动名额，也就是，初始团队大概有8名，我们假设团队平均工资在13000左右（憋惊讶，深圳需要这个数，还是比较低的。。。），需要给员工缴纳五险一金，详见下表（假设我们是老实善良的公司，公积金按最低标准缴纳）：</p>

<p><img src="http://images.90159.com/10/product.jpg" alt="product" /></p>

<p><strong>除工资的部分，还要平均为每个员工多缴纳 3653元的五险一金支出，员工部分的支出是 （13000+3653）*8=133224元/月。</strong></p>

<p>好，有了团队，下一步要解决的是工作场所的问题，8人团队可以选择创业孵化器（前提是你能找到孵化器）或者中低端的办公场所（这类的办公场所，深圳大约是120元/㎡，大约100平米）。这里有必要稍微提以下孵化器，孵化器的租金会比较便宜（或者不要钱），在接纳创业团队之前一般会签署协议，需要以场地作为股权置换条件，或者是优先投资权，是否划算，得创业团队自己掂量。算上水电、物业，一个月15000左右算比较省了。</p>

<p>有了场地和团队，接下来置换办公耗材、宽带之类的（假设电脑自己带），普通的人体工程学椅子价格在150元左右，如果不买工程学椅子也可以，用普通的椅子，加上桌子平摊成本，桌椅需要200左右的成本，这算一次性付出。拍脑袋，6000元可以搞定吧。</p>

<p>唔，人、场地、作案工具齐活了，开始进入正题吧。</p>

<h3>一、产品定位、扯皮、早期工作准备阶段。</h3>

<p>做APP之前一般会有个老板，老板大概知道自己想要什么功能（对，老板一般不知道自己要做什么东西，需求是什么，产品定位是什么），这时候产品经理要出马了，跟老板各种扯皮、厘清需求、找产品定位，这里大概扯吧个两周，好说歹说会把产品的定位、一期的需求想清楚（期间架构师可以开始构思产品的技术架构了，未能正式开工）。</p>

<p>产品定位以及早期的需求确定出来之后，需要想个产品的名字、需求调研、竞品调研分析、注册域名、购置服务器以及周边基础能力（如CDN存储、短信服务、消息推送等）、商标（未注册商标、很多团队就是吃了这个亏）、抢注域名、设计logo，这里在老板不中途改变想法、变更产品需求和定位的前提下，最起码扯一周，这时候产品的原型、技术架构的雏形也出来了，基本可以进入真刀真枪的干活了。这一步假设域名不需要花大价钱购买，全部费用算起来拍脑袋10000元/年 可以搞定。</p>

<!--more-->


<h3>二、产品版本策划、架构设计阶段。</h3>

<p>看似一切都准备就绪之后，产品开始整理需求，按照需求优先级规划版本。架构师按照产品的发展方向构想，开始着手进入开发环境、生产环境部署、基础代码研发阶段。</p>

<p>很有必要提一下的是，做APP比较常见的两种功能实现方式有native原生和webview 方式，这两种方式的优劣不在本文的讨论范围，一般为了保证体验，以原生的方式为主，webview的方式为辅。以原生的方式做开发，版本是尤为重要的。其一，APP开发完成之后，需要把上架到APP store（假设我们只上iOS和安卓），iOS 的APP Store 有冗长的应用审核周期，你必须提前把往后几个中小版本的功能规划好了才不至于在这个环节自乱阵脚；其二，你的APP安装到用户的手机上时你肯定希望他大部分时候运行的都是最新的版本，如果你的版本更新过于频繁，用户也会烦。</p>

<p>看起来过程似乎非常顺利，产品经理把产品的思路厘清之后，开始准备产品V1.0 的规划。</p>

<p>新产品从无到有常见的工作：</p>

<pre><code>（1）产品官网，产品官网是产品、公司、团队的脸面，让用户进入之后能以最快的速度了解你的定位以及产品特性，也就是什么样的人在为解决什么样的问题，做着什么样的事情。

（2）用户协议。是的，如果用户要注册、使用你的产品，你得起草你的用户协议，跟律师或法务不断沟通调整。

（3）种子用户。嗯，你要思考你的第一批种子用户从哪里来，如何组织，怎么管理，他们是检验你产品的第一群人，对于验证你的产品定位、发现产品问题、提升产品体验来说至关重要。

（4）基础数据上报规划。你要知道产品一旦发布，在对用户行为一无所知的情况下，需要收集什么数据来优化、调整你的产品设计，思考你的产品方向。

（5）UI设计与交互标准制定。不能保证产品的UI以及交互一上线就有让用户觉得惊艳的效果，但是必须保证UI/交互在一致性上没有问题。

（6）后台管理系统。如论是查看数据还是内容管理，后台管理系统是你工作的有效辅助，也不能少。

（7）APP。这是你的产品的重中之重，密切观察跟踪。

（8）。。。
</code></pre>

<p>如果一切顺利，那么在3-6个月之后，你的APP第一版应该有了第一个雏形了。</p>

<h3>三、内部测试、打磨阶段。</h3>

<p>在这个阶段，你要跟设计、研发、种子用户之间保持密切沟通，不断收集问题、发现问题、优化、解决问题，期间可能需要发布1-3个beta子版本。同时，你要想办法保持种子用户的活跃与配合的激情，这是一项艰巨的工作，谁做谁知道。</p>

<h3>四、发布阶段</h3>

<p>发布的时候，不算渠道宣传费用，不打广告，上线iOS APP Store 需要注册开发者账号，购买证书，也需要花费一定的费用，不多，也就99美元/年。</p>

<p>如果你做得多一些，找安全团队帮你做安全评估，这里也要花上一些钱，这里就不算了。至于负载均衡、加速技术什么的，你的APP刚上线，应该用不上。</p>

<p>6个月的时间，算快，一个APP从无到有需要的费用大概这么算：</p>

<pre><code>人工费用：    133224元*6个月 ≈ 80 w。

场地租金： 15000元*6个月 = 9w。

办公耗材+桌椅支出：1w。

服务器、域名、周边IT基础费用：2w。
</code></pre>

<p>大约算下来，不算营销费用，第一个版本，你需要准备100w。</p>

<p>是的，当有人问题做一个APP需要多少钱时，你可以回答一个不太复杂的APP，从无到有做出来，半年第一个版本出来，需要100万。</p>

<p>当别人做出很赞的东西，我们常感慨“啊，这个东西我早想到了”，作为程序员或产品经理，想到了并不是什么值得骄傲的事情，重要的是：做出来，是的，执行力很重要。</p>

<blockquote><p>本文作者 @歪，微信公众号：程序员和产品经理（ID：devpdm） 来源：鸟哥笔记（ID：niaoge8）</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac Adobe Photoshop CS6 破解教程(图文)]]></title>
    <link href="http://www.superqq.com/blog/2015/10/20/mac-adobe-photoshop-crack/"/>
    <updated>2015-10-20T21:05:12+08:00</updated>
    <id>http://www.superqq.com/blog/2015/10/20/mac-adobe-photoshop-crack</id>
    <content type="html"><![CDATA[<p>看到网上很多童鞋发帖咨询如何破解 Mac Adobe Photoshop CS6 ，今天刚好换电脑，我又下载了一个Photoshop，并且成功破解。我把破解过程记录一下，希望能帮助到更多童鞋。</p>

<h2>下载Adobe Photoshop CS6</h2>

<p>如果你找不到下载地址，我教你一个简单的，在百度里面搜索Photoshop:</p>

<p><img src="http://images.90159.com/10/ps1.png" alt="ps1" /></p>

<p>看到了吧，上面还显示一行绿色字体：已通过百度安全认证，请放心使用！所以不需要到这到那去找下载地址了。</p>

<h2>安装Adobe Photoshop CS6</h2>

<p>下载完成之后，双击解压，找到install：</p>

<p><img src="http://images.90159.com/10/ps5.png" alt="ps1" /></p>

<p>别急，这个时候请务必断网！然后，再去点击试用：</p>

<p><img src="http://images.90159.com/10/ps2.png" alt="ps1" /></p>

<p>接受协议：</p>

<p><img src="http://images.90159.com/10/ps3.png" alt="ps1" /></p>

<p>进入安装界面：</p>

<p><img src="http://images.90159.com/10/ps4.png" alt="ps1" /></p>

<!--more-->


<h2>破解Adobe Photoshop CS6</h2>

<p>下载amtlib.framework，百度云盘地址放出来会被和谐，所以我把下载地址放到公众号iOS开发：iOSDevTip  关注之后回复：ps 即可获取！</p>

<p>在“应用程序”文件夹，找到Adobe Photoshop CS6文件夹，在里面找到Adobe Photoshop CS6.app，右键选择“显示包内容” 。</p>

<p><img src="http://images.90159.com/10/ps6.png" alt="ps1" /></p>

<p>找到contents/framework文件夹，把刚才解压得到的amtlib.framework拷贝进去，替换整个文件夹。</p>

<p><img src="http://images.90159.com/10/ps7.png" alt="ps1" /></p>

<p>恭喜你，破解完成！如果破解过程中遇到问题，可以加我微信：chinaligang 如果有时间我很乐意把你解决噢！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[五个案例让你明白GCD死锁]]></title>
    <link href="http://www.superqq.com/blog/2015/10/16/five-case-know-gcd/"/>
    <updated>2015-10-16T20:29:42+08:00</updated>
    <id>http://www.superqq.com/blog/2015/10/16/five-case-know-gcd</id>
    <content type="html"><![CDATA[<pre><code>作者：brighttj（@saitjr

网址：http://www.brighttj.com/ios/ios-gcd-deadlock.html
</code></pre>

<p>死锁一直都是在使用多线程时，需要注意的一个问题。以前对同步、异步，串行、并行只有一个模糊的概念，想想也是时候整理一下了。再看看之前的博客，已经很久没有干货了【说得好像之前有干货一样】，所以，这篇博客，我尽最大努力，也借鉴了很多其他博客中的例子，来讲解GCD死锁问题。</p>

<p>环境信息：</p>

<p>Mac OS X 10.10.5</p>

<p>Xcode 6.4</p>

<p>iOS  8.4</p>

<h2>串行与并行</h2>

<p>在使用GCD的时候，我们会把需要处理的任务放到Block中，然后将任务追加到相应的队列里面，这个队列，叫做Dispatch Queue。然而，存在于两种Dispatch Queue，一种是要等待上一个执行完，再执行下一个的Serial Dispatch Queue，这叫做串行队列；另一种，则是不需要上一个执行完，就能执行下一个的Concurrent Dispatch Queue，叫做并行队列。这两种，均遵循FIFO原则。</p>

<pre><code>举一个简单的例子，在三个任务中输出1、2、3，串行队列输出是有序的1、2、3，但是并行队列的先后顺序就不一定了。
</code></pre>

<p>那么，并行队列又是怎么在执行呢？</p>

<p>虽然可以同时多个任务的处理，但是并行队列的处理量，还是要根据当前系统状态来。如果当前系统状态最多处理2个任务，那么1、2会排在前面，3什么时候操作，就看1或者2谁先完成，然后3接在后面。</p>

<p>串行和并行就简单说到这里，关于它们的技术点其实还有很多，可以自行了解。</p>

<h2>同步与异步</h2>

<p>串行与并行针对的是队列，而同步与异步，针对的则是线程。最大的区别在于，同步线程要阻塞当前线程，必须要等待同步线程中的任务执行完，返回以后，才能继续执行下一任务；而异步线程则是不用等待。</p>

<p>仅凭这几句话还是很难理解，所以之后准备了很多案例，可以边分析边理解。</p>

<!--more-->


<h2>GCD API</h2>

<p>GCD API很多，这里仅介绍本文用到的。</p>

<ol>
<li><p>系统标准提供的两个队列</p>

<pre><code> // 全局队列，也是一个并行队列

 dispatch_get_global_queue 

 // 主队列，在主线程中运行，因为主线程只有一个，所以这是一个串行队列

 dispatch_get_main_queue 
</code></pre></li>
<li><p>除此之外，还可以自己生成队列</p>

<pre><code> // 从DISPATCH_QUEUE_SERIAL看出，这是串行队列

 dispatch_queue_create("com.demo.serialQueue", DISPATCH_QUEUE_SERIAL) 

 // 同理，这是一个并行队列

 dispatch_queue_create("com.demo.concurrentQueue", DISPATCH_QUEUE_CONCURRENT) 
</code></pre></li>
</ol>


<p>接下来是同步与异步线程的创建：</p>

<pre><code>dispatch_sync(..., ^(block)) // 同步线程

dispatch_async(..., ^(block)) // 异步线程
</code></pre>

<h2>案例与分析</h2>

<p>假设你已经基本了解了上面提到的知识，接下来进入案例讲解阶段。</p>

<h2>案例一：</h2>

<pre><code>NSLog(@"1"); // 任务1

dispatch_sync(dispatch_get_main_queue(), ^{

    NSLog(@"2"); // 任务2

});

NSLog(@"3"); // 任务3
</code></pre>

<p>结果，控制台输出：</p>

<pre><code>1
</code></pre>

<p>分析：</p>

<pre><code>dispatch_sync表示是一个同步线程；

dispatch_get_main_queue表示运行在主线程中的主队列；

任务2是同步线程的任务。
</code></pre>

<p>首先执行任务1，这是肯定没问题的，只是接下来，程序遇到了同步线程，那么它会进入等待，等待任务2执行完，然后执行任务3。但这是队列，有任务来，当然会将任务加到队尾，然后遵循FIFO原则执行任务。那么，现在任务2就会被加到最后，任务3排在了任务2前面，问题来了：</p>

<pre><code>任务3要等任务2执行完才能执行，任务2由排在任务3后面，意味着任务2要在任务3执行完才能执行，所以他们进入了互相等待的局面。【既然这样，那干脆就卡在这里吧】这就是死锁。
</code></pre>

<p><img src="http://www.brighttj.com/wp-content/uploads/2015/09/gcd-deadlock-1.png" alt="deadlock" /></p>

<h2>案例二：</h2>

<pre><code>NSLog(@"1"); // 任务1

dispatch_sync(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_HIGH, 0), ^{

    NSLog(@"2"); // 任务2

});

NSLog(@"3"); // 任务3
</code></pre>

<p>结果，控制台输出：</p>

<pre><code>1

2

3
</code></pre>

<p>分析：</p>

<p>首先执行任务1，接下来会遇到一个同步线程，程序会进入等待。等待任务2执行完成以后，才能继续执行任务3。从dispatch_get_global_queue可以看出，任务2被加入到了全局的并行队列中，当并行队列执行完任务2以后，返回到主队列，继续执行任务3。</p>

<p><img src="http://www.brighttj.com/wp-content/uploads/2015/09/gcd-deadlock-2.png" alt="2" /></p>

<h2>案例三：</h2>

<pre><code>dispatch_queue_t queue = dispatch_queue_create("com.demo.serialQueue", DISPATCH_QUEUE_SERIAL);

NSLog(@"1"); // 任务1

dispatch_async(queue, ^{

    NSLog(@"2"); // 任务2

    dispatch_sync(queue, ^{  

        NSLog(@"3"); // 任务3

    });

    NSLog(@"4"); // 任务4

});

NSLog(@"5"); // 任务5
</code></pre>

<p>结果，控制台输出：</p>

<pre><code>1

5

2

// 5和2的顺序不一定
</code></pre>

<p>分析：</p>

<p>这个案例没有使用系统提供的串行或并行队列，而是自己通过dispatch_queue_create函数创建了一个DISPATCH_QUEUE_SERIAL的串行队列。</p>

<pre><code>执行任务1；

遇到异步线程，将【任务2、同步线程、任务4】加入串行队列中。因为是异步线程，所以在主线程中的任务5不必等待异步线程中的所有任务完成；

因为任务5不必等待，所以2和5的输出顺序不能确定；

任务2执行完以后，遇到同步线程，这时，将任务3加入串行队列；

又因为任务4比任务3早加入串行队列，所以，任务3要等待任务4完成以后，才能执行。但是任务3所在的同步线程会阻塞，所以任务4必须等任务3执行完以后再执行。这就又陷入了无限的等待中，造成死锁。
</code></pre>

<p><img src="http://www.brighttj.com/wp-content/uploads/2015/09/gcd-deadlock-3.png" alt="3" /></p>

<h2>案例四：</h2>

<pre><code>NSLog(@"1"); // 任务1

dispatch_async(dispatch_get_global_queue(0, 0), ^{

    NSLog(@"2"); // 任务2

    dispatch_sync(dispatch_get_main_queue(), ^{

        NSLog(@"3"); // 任务3

    });

    NSLog(@"4"); // 任务4

});

NSLog(@"5"); // 任务5
</code></pre>

<p>结果，控制台输出：</p>

<pre><code>1

2

5

3

4

// 5和2的顺序不一定
</code></pre>

<p>分析：</p>

<p>首先，将【任务1、异步线程、任务5】加入Main Queue中，异步线程中的任务是：【任务2、同步线程、任务4】。</p>

<p>所以，先执行任务1，然后将异步线程中的任务加入到Global Queue中，因为异步线程，所以任务5不用等待，结果就是2和5的输出顺序不一定。</p>

<p>然后再看异步线程中的任务执行顺序。任务2执行完以后，遇到同步线程。将同步线程中的任务加入到Main Queue中，这时加入的任务3在任务5的后面。</p>

<p>当任务3执行完以后，没有了阻塞，程序继续执行任务4。</p>

<p>从以上的分析来看，得到的几个结果：1最先执行；2和5顺序不一定；4一定在3后面。</p>

<p><img src="http://www.brighttj.com/wp-content/uploads/2015/09/gcd-deadlock-4.png" alt="4" /></p>

<h2>案例五：</h2>

<pre><code>dispatch_async(dispatch_get_global_queue(0, 0), ^{

    NSLog(@"1"); // 任务1

    dispatch_sync(dispatch_get_main_queue(), ^{

        NSLog(@"2"); // 任务2

    });

    NSLog(@"3"); // 任务3

});

NSLog(@"4"); // 任务4

while (1) {

}

NSLog(@"5"); // 任务5
</code></pre>

<p>结果，控制台输出：</p>

<pre><code>1

4

// 1和4的顺序不一定
</code></pre>

<p>分析：</p>

<p>和上面几个案例的分析类似，先来看看都有哪些任务加入了Main Queue：【异步线程、任务4、死循环、任务5】。</p>

<p>在加入到Global Queue异步线程中的任务有：【任务1、同步线程、任务3】。</p>

<p>第一个就是异步线程，任务4不用等待，所以结果任务1和任务4顺序不一定。</p>

<p>任务4完成后，程序进入死循环，Main Queue阻塞。但是加入到Global Queue的异步线程不受影响，继续执行任务1后面的同步线程。</p>

<p>同步线程中，将任务2加入到了主线程，并且，任务3等待任务2完成以后才能执行。这时的主线程，已经被死循环阻塞了。所以任务2无法执行，当然任务3也无法执行，在死循环后的任务5也不会执行。</p>

<p>最终，只能得到1和4顺序不定的结果。</p>

<p><img src="http://www.brighttj.com/wp-content/uploads/2015/09/gcd-deadlock-5.png" alt="5" /></p>

<h2>参考</h2>

<pre><code>http://www.jianshu.com/p/0b0d9b1f1f19

http://www.cnblogs.com/tangbinblog/p/4133481.html
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[杀一个程序员不需用枪，改三次需求即可]]></title>
    <link href="http://www.superqq.com/blog/2015/10/11/kill-a-programmer/"/>
    <updated>2015-10-11T16:47:09+08:00</updated>
    <id>http://www.superqq.com/blog/2015/10/11/kill-a-programmer</id>
    <content type="html"><![CDATA[<p>1、栈和队列的区别是啥? 吃多了拉就是队列;吃多了吐就是栈。</p>

<p>2、世界上最遥远的距离不是生与死，而是你亲手制造的BUG就在你眼前，你却怎么都找不到她。</p>

<p>3、《c++程序设计语言》比《c程序设计语言》厚了几倍。。。果然有了对象就麻烦很多。</p>

<p>4、怎么使用面向对象的方式变得富有?继承。</p>

<p>5、为什么程序员总是分不清万圣节和圣诞节?因为 Oct 31 == Dec 25。</p>

<p>6、Keyboard not found &hellip; press F1 to continue</p>

<p>7、提交代码不写注释的人，XX就跟注释一样长。</p>

<p>8、杀一个程序员不需要用枪，改三次需求就可以了。</p>

<p>9、服务器按功能可以分为：数据库服务器，web服务器，cache服务器，下片儿服务器等等。</p>

<p>10、四个2B青年掐架。</p>

<p>A：你丫等着，我爹是敏感词!</p>

<p>B：Cao你大爷!你丫牛B神马，我爹在网上搜索根本无法显示!!</p>

<p>C： 我爹404 not found!!!</p>

<p>D：我爹Connection Reset !!!!</p>

<p>11、一同学问我，软件外包是什么。解释了几句还没明白，遂想了一下：包工头知道吧?顿悟！</p>

<p>12、十行代码九个警告八个错误竟然敢说七日精通六天学会五湖四海也不见如此三心二意之项目经理简直一等下流。</p>

<p>13、一个程序猿在肉店买了1公斤肉，回家一称，他不高兴的跑回肉店对老板说：少了24克……</p>

<p>14、网络聊天的时候，想表达对方是猪，一般人会打“xxx你这个猪。”，程序员会打 xxx.isPig = TRUE。</p>

<p>15、两个程序员，一个技术精湛，思维严谨，认真负责，Bug极少，至今单身;一个技术一般，吊儿郎当，Bug一堆，经常被测试MM叫到她旁边，接受批评，后来成了她男朋友。</p>

<p>16、宝宝数学很好，2岁就可以从1数到10了。后来，我告诉他0比1还小。</p>

<p>今天吃饺子，我说：“宝宝，你数数你想吃几个饺子?”</p>

<p>“0，1，2，3。”一边说着一边拿起一个饺子，“这是第0个。”</p>

<p>老婆怒吼：“下一代还是做程序员的命!”</p>

<p>17、程序员找不到对象，一般有三种情况：</p>

<p>● C#、JAVA都有对象，但是经常找不到对象。</p>

<p>● ASM C直接没有对象。</p>

<p>● javascript都是伪对象，最多算暧昧。</p>

<p>但C++日子一直都好过，因为C++是多继承，富二代呀!!!</p>

<p>18、程序猿：我的第一个问题是，对于我第二个和第三个问题，你可不可以只用‘能’和‘不能’来回答?</p>

<p>老板：“OK!”</p>

<p>我的第二个问题是，如果我的第三个问题是我能不能涨工资?那么你对于我的第三个问题的答案能不能和第二个问题的答案一样?</p>

<p>老板：。。。。。。</p>

<p>19、假如生活欺骗了你，找50个程序员问问为什么编程；</p>

<p>假如生活让你想死，找50个程序员问问BUG改完了没有;</p>

<p>假如你觉得生活拮据，找50个程序员问问工资涨了没有;假如你觉得活着无聊，找50个程序员问问他们一天都干了什么!</p>

<p>20、c程序员看不起c++程序员， c++程序员看不起java程序员， java程序员看不起c#程序员，c#程序员看不起美工， 周末了，美工带着妹子出去约会了…一群傻X程序员还在加班!</p>

<p>21、客户被绑，蒙眼，惊问：“想干什么?”</p>

<p>对方不语，鞭笞之，客户求饶：“别打，要钱?”</p>

<p>又一鞭，“十万够不?”</p>

<p>又鞭，“一百万?”</p>

<p>又一鞭。客户崩溃：“你们TMD到底要啥?”</p>

<p>“要什么?我帮你做项目，写代码的时候也很想知道你TMD到底想要啥!”</p>

<p>22、“这位同学，请问你知道《边城》吗?”“呸!别跟我提编程，老子这辈子最讨厌的就是编程!”</p>

<p>23、摘自雷登书屋数据处理字典： 死循环: n.,见无限循环。 无限循环：n.,见死循环。</p>

<p>24、一个人正吸着雪茄，吐着烟圈。他女朋友生气了发飙道，“你没看见包装盒上的警告么?吸烟有害健康!” 那人回答道：“我是程序员。我们不关心警告，只关心错误。”</p>

<p>来源：豆夫脑</p>
]]></content>
  </entry>
  
</feed>
